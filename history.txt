which ls
touch hi
rm hi
tree
tree -c
man
help 
help ls
help ls
help tree
tree -h
tree --h
less
man
help nu
git -h
tsc -
tsc --init
touch index.ts
tsc
node out\index.js
tsc
node out\index.js
pwd
ls | sort-by size 
ls | sort-by size | reverse
ls | sort-by date | reverse
ls | sort-by modified | reverse
ls | sort-by type | reverse
rm -rf .chocolatey
ls | sort-by type | reverse
top
ps
ps
ps | sort-by mem | reverse
date
date now
date now | table
date now |date to-table
ps | where mem > 300 
ps | where mem > 300mb 
ps | where cpu > 1
ps | where cpu > 1
sys
sys | get cpu
date now |date to-table
date now |date to-table | select minute
from
ps | where mem > 300mb | select pid name mem
ps | where mem > 300mb | select pid name mem virtual
sys | get cpu
which
which ls
which touch
path
path basename
ls | sort-by type | reverse
ls | where size > 0 |sort-by type | reverse
ls | where size > 0b |sort-by type | reverse
config
config nu
echo $nu.config-path
code .\AppData\Roaming\nushell\config.nu
info
use
use std::io;
use std
ls | where size > 0b |sort-by type | reverse
pwd
starship
ps | where mem > 300mb | select pid name mem virtual | each { |it| ^echo $it}
ps | where mem > 300mb | select pid | each { |it| ^echo $it}
ps | where mem > 300mb | select name | each { |it| ^echo $it}
ps | where mem > 300mb | each { |it| ^echo $it}
sys 
sys | get host.hostname
ls | select name
ls | select name | each { |it| ^echo $it }
ls | select name | each { |it| ^echo "$it" }
ls | select name | grep -G Music
grep
winget install grep
gcc
winget install gcc
winget install gcc-13
winget install mingw64
winget search gcc
vim
ed
notepad
echo $nu.config-path
winget install starship
echo $nu.env-path
code C:\Users\Cheth\AppData\Roaming\nushell\env.nu
code .\AppData\Roaming\nushell\config.nu
echo $nu.config-path
code .\AppData\Roaming\nushell\config.nu
cp .\OneDrive\Pictures\nuicon.png `C:\Program Files\nu\nuicon.png`
sudo
code .\AppData\Roaming\nushell\config.nu
ls */*/*.html
ls **/*.html
ls **/index.html
cleat
rustup 
rustup update
rustup update stable
rustup toolchain stable
rustup show
rustup update stable
rustup update cargo
cargo update
cd /
ls **/*
fzf
winget install fzf
fzf
.
fzf
lazygit
winget install go
winget install GoLang.go
go install lazygit
go install lazygit@latest
go install github.com/jesseduffield/lazygit@latest
runas user:Admistrator pwd
runas /user:Admistrator pwd
runas /user:Administrator pwd
runas /user:Chet pwd
runas /user:Chethan.l pwd
net user Administrator /active:yes
net user Administrator *
net user Administrator password
net user Administrator password QW12er!@
net user Administrator password
runas /user:Chethan.l pwd
runas /user:Administrator pwd
runas /user:Administrator "pwd"
pwd
runas /user:Administrator "cmd"
net user Administrator /Delete
net user Administrator 
net user Administrator /delete
net user Administrator *
net user Administrator /active:no
runas /user:Administrator /savecred "cmd"
su
runas /user:Administrator /savecred "cmd"
net user Administrator /active:yes
runas /user:Administrator /savecred "cmd"
net user Administrator /active:no
runas /user:Administrator /savecred "cmd"
ls **/index.ts
py -m pip install --upgrade pip
py -m pip install numpy
echo $path
Workspace\VSCode\web\
cd TS\
tree -c
tree | colorcpl.exe 
tree | color
tree | table
tree 
tree .
ll -AR
ls -A
ls -a
ls -aR
du
ncdu
export
def
"def abc[] {1, 2, 3, 4, 5}" | save "demo.nu"
source 
source "demo.nu"
rm demo.nu demo.txt
cleear
pwd
tree
tree
tree.exe
tree
tree
Workspace\VSCode\Intership\Session1\
TREE
ls -R
ls --all
ls -a -l
ls -a -l -d
cleeeear
tree
cd Workspace\
tree
tree /f
tree /f
tree /f
ps
top
winget install htop
lazygit
cd `Workspace\Visual Studio\BigInteger\`
tree /f
❤️❤️❤️❤️❤️❤️
lazygit
winget install neovim.neovim
winget uninstall neovim.neovim
cd AppData\
cd Local\
du
du | get nvim nvim-data
du | select nvim nvim-data
du.nvim
du | get nvim
du | where path == "nvim"
du | where path == "nvim-data"
tree /f nvim-data
rm -rfv nvim
rm -rfv nvim-data
du | where path == "nvim-data"
du | where path == "nvim"
exit
nu
tmux
ls | length 
tree /f | length
help tree
tree -h
tree /help
tree /h
tree 
man
fzf
fzf | code
fzf | code
ler
code $(fzf)
xargs
bash
cmake
cat
cal
time
date
date now
date now | select day
date now | date to-table
date now | date to-table | select month
date now | date to-table | select month | each {|it| ^echo $it}
date now | date to-table | select month | each {|it| ^echo string($it)}
date now | date to-table | select month
sys | get host.hostname
sys | get host
sys | get host.session.name
sys | get host.sessions.name
sys | get host.sessions.name | each {|it| ^echo $it }
sys | get host
net
net user
net user Cheth
fzf | each { |it| ^echo $it }
fzf | each { |it| ^code $it }
fzf | code -
er
fzf | each { |it| where $it != none ^code $it }
fzf | each { |it| ^code $it  | where $it != null}
fzf | each { |it| ^code $it  | where !is-empty}
fzf | each { |it| ^echo $it  | where !is-empty}
fzf | each { |it| ^echo $it}
fzf |{|it| ^echo $it}
fzf | do {|it| ^echo $it}
fzf | do code
exit
hello
path
cd Workspace\
rm -v customfont.reg myfont.reg
mkdir NuShell
cd NuShell\
"def abc[] {1+2}" | save demo.nu
source "demo.nu"
"def abc [] {1+2}" | save demo.nu
"def abc [] {1+2}" | save demo.nu -f
source "demo.nu"
abc
"def abc [] {echo \"hi\"}" | save demo.nu -f
source "demo.nu"
abc
code demo.nu
def say_hi () {echo "hi"}
say_hi
def say_hello()
def say_hello ()
def say_hello () \
def say_hello () 
cd Workspace\NuShell\
source "demo.nu"
abc
source "demo.nu"
abc
abc Chethan
source "demo.nu"
abc Chethan
source "demo.nu"
abc Chethan
cd Workspace\NuShell\
source "demo.nu"
echo "chethan" | abc
abc (echo "chethan")
code (fzf)
source "demo.nu"
abc (echo "chethan")
echo "chethan" | abc
let a = 10
let b = 20
a + c
a + b
a
$a + $b
$a
$a = 20
let mut c = 30
$c = 100
c = 100
$mut c = 100
$c
let mut c = 30
ls | enumerate | each {|it| ^echo $it }
ls | enumerate | each {|it| ^echo $it.name }
ls | enumerate | each {|it| ^echo $it.size }
ls | enumerate
ls | enumerate | each {|it| ^echo $it.0.size }
ls | enumerate | get name
ls | enumerate | get 0.name
ls | enumerate | get item
ls | enumerate | get item.name
ls | enumerate | each {|it| ^echo $it.item.name}
ls ../.. | enumerate | each {|it| ^echo $it.item.name}
ls ../.. | enumerate | each {|it| ^echo $it.item.name} | where !is-empty
ls ../.. | enumerate | each {|it| ^echo $it.item.name | where !is-empty} 
ls ../.. | enumerate | each {|it| ^echo $it.item.name } 
ls ../.. | enumerate | each {|it| if (!is-empty)  {^echo $it.item.name } }
ls ../.. | enumerate | each {|it| if (not is-empty)  {^echo $it.item.name } }
ls ../.. | enumerate | each {|it| ^echo $it.item.name}
ls ../.. | each {|it| ^echo $it.name}
ls | enumerate | each { |it| $"Number ($it.index) is size ($it.item.size)" }
[one, two, three, four, five, six] | reduce {|curr, max|
<\n>    if ($curr | str length) > ($max | str length) {
<\n>        $curr
<\n>    } else {
<\n>        $max
<\n>    }
<\n>}
help reduce
winget install Spicetify.Spicetify
spicetify-cli
spicetify
cleer
iwr
curl
curl -fsSL https://raw.githubusercontent.com/spicetify/spicetify-cli/master/install.ps1
winget install Spicetify.Spicetify
winget install Spicetify.Spicetify-
winget install Spicetify
winget install Spicetify-marketplace
$appdata
%appdata
cd %appdata%
cd AppData\Local\
mkdir spicetify
cd spicetify\
mkdir CustomApps
cd CustomApps\
mv ~\Downloads\spicetify-marketplace ./marketplace
tree /f
spicetify config inject_css 1
spicetify config replace_colors 1
spicetify config current_theme marketplace
spicetify config custom_apps marketplace
spicetify apply
spicetify backup apply
spicetify apply
spicetify config custom_apps marketplace
spicetify apply
cd AppData\Local\
mv spicetify ~\AppData\Roaming\
mv spicetify ~\AppData\Roaming
cd ..\Roaming\
mv ~\AppData\Local\spicetify .\
mv ~\AppData\Local\spicetify .\spicetify
spicetify config custom_apps marketplace
spicetify apply
cd AppData\Roaming\
spicetify config inject_css 1
spicetify config replace_colors 1
spicetify config current_theme marketplace
spicetify config custom_apps marketplace
spicetify apply
spicetify config replace_colors 0 current_theme Frostify
spectify backup apply
spicetify backup apply
spicetify auto
spicetify
spicetify config replace_colors 0 current_theme Frostify
spicetify apply
git clone https://github.com/catppuccin/spicetify.git
rm spicetify
rm -rf spicetify
git clone https://github.com/catppuccin/spicetify.git
cd spicetify\
mv .\catppuccin\ ~\AppData\Roaming\spicetify\Themes\catppuccin
cd ..
spicetify config current_theme catppuccin
spicetify config color_scheme frappe
spicetify config inject_css 1 inject_theme_js 1 replace_colors 1 overwrite_assets 1
spicetify apply
spicetify auto
spicetify auto --transparent-window-controls
[1 2 3 4] | to yaml
[1 2 3 4] | into string
[1 2 3 4] | into list
['1 cheth' '2 deep'] | parse '{num} {name}'
help str
help int
help char
['1 cheth' '2 deep'] | parse '{num} {name}'
$"(ansi blue) Hi"
echo "hello"
$"(ansi blue) Hi"
$"hhello"
[monday tuesdoy wednesday thursday friday saturday sunday]
[monday tuesdoy wednesday thursday friday saturday sunday] | enumerate 
[monday tuesdoy wednesday thursday friday saturday sunday] | enumerate | each {|it| ^echo $"($it.item) is the ($it.index) day"}
[monday tuesdoy wednesday thursday friday saturday sunday] | enumerate | each {|it| ^echo $"($it.item) is the ($it.index + 1) day"}
[monday tuesday wednesday thursday friday saturday sunday] | enumerate | each {|it| ^echo $"($it.item) is the ($it.index + 1) day"}
[1 2 3 4 5  6 7 8 9 0]
[1 2 3 4 5  6 7 8 9 0] | reduce { |it, sum| $sum + $it}
[1 2 3 4 5  6 7 8 9 0] | reduce { |it, sum| $sum * $it}
[1 2 3 4 5  6 7 8 9] | reduce { |it, sum| $sum * $it}
1 * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9
10/3
10 / 3
def fact [num: int] {if(num <= 1) { 1 } else {}}
def fact [num: int] {if(num <= 1) { 1 } else { return num * fact (num - 1)}}
fact
fact 5
def fact [num: int] {if($num <= 1) { 1 } else { return $num * fact ($num - 1)}}
fact 5
def fact [num: int] {if($num < 1) { 1 } else { return $num * fact ($num - 1)}}
fact 5
10 < 3
let a = 10
def fact [num: int] {if ($num < 1) { 1 } else { return ($num * fact ($num - 1))}}
$a - 1
def fact [num: int] {if ($num < 1) { 1 } else { return $num * fact ($num - 1) )} }
def fact [num: int] {if ($num < 1) { 1 } else { return ($num * fact ($num - 1))} }
def fact [num: int] {if ($num < 1) { 1 } else { return ($num * fact ( $num - 1 ))} }
def fact [num: int] {if ($num < 1) { 1 } else {}}
fact 1
fact 7
def fact [num: int] {if ($num < 1) { return 1 } else {}}
fact 7
find
find demo
help find
ls | find --reger "[0-9]"
ls | find --regex "[0-9]"
ls | find --regex "[0-9]" -column name
ls | find --regex "[0-9]" --column name
ls | find --regex "[0-9]" --columns name
ls | find --regex "[0-9]" --columns [name]
ls | find --regex spicetify
ls | where name == "sqicetify"
ls | where name == "spicetify"
ls | each {|it| ^echo $"($it.name) is of size ($it.size)"}
echo hello
ls | each {|it| ^echo ($it.name) is of size ($it.size)}
ls | each {|it| ^echo ($it.name) is of size ($it.size | into string)}
start demo.cxx
touch demo.cxx
start demo.cxx
rm demo.cxx
ls | sort-by modified | reverse 
rm -rf spicetify
spicetify auto --transparent-window-controls
glob **/.{js, ts}
glob **/*.{js, ts}
glob **/*.{c,cpp,cc}
glob **/*.{rs}
rustup update
def say_hello [name , --age(-a): int] { echo $"Hello , ($name)" }
say_hello "Chethan"
say_hello "Chethan" 10
say_hello "Chethan" --age 10
def say_hello [name , --age(-a): int] { echo $"Hello , ($name)" ; if ($age != null) { echo $"You are ($age) years old" } }
say_hello "Chethan"
say_hello "Chethan" --age 10
def sum [...vars: int] { let sum: mut int = 0; for $var in $vars { $sum = $sum + $var } }
def sum [...vars: int] { let sum:int = 0; for $var in $vars { $sum = $sum + $var } }
def sum [...vars: int] { let sum: int = 0; for $var in $vars { let $sum = $sum + $var } }
sum 1 2 3 4 5 6 7 8 9 
def sum [...vars: int] { let sum: int = 0; for $var in $vars { let $sum = $sum + $var } ; print $"The sum is ($sum) "}
sum 1 2 3 4 5 6 7 8 9 
def sum [...vars: int] { mut sum: int = 0; for $var in $vars { $sum = $sum + $var } ; print $"The sum is ($sum) "}
sum 1 2 3 4 5 6 7 8 9 
def sum [...vars: int] { mut sum: int = 0; for $var in $vars { $sum = $sum + $var } ; print $"The sum is ($sum) "}
sum 1 2 3 4 5 6 7 8 9 
code (fzf)
$env
$env.AppData
$env.APPDATA
$env.USER
$env.USERNMAE
$env.USERNAME
vim
nano
ed
32 | describe 
32 | describe 
cd Workspace\NuShell\
code mod.nu
use mod.nu
hi
demo hi
demo.nu hi
use mod.nu hi
use demo
use mod.nu demo
spicetify auto --transparent-window-controls
starship
starship config
code (starship config)
tmux
winget install tmux
1 | describe 
1..4
for $v in 1..4 {print $"($v)\n"}
for $v in 1..4 {print $"($v)"}
let tab = [[name, id]; [chethan, 13], [deepak, 16]]
$tab
0b10010
0x98AC
while true {print $tab}
mut i = 0
while ($i < 3) { print $tab; $i = $i + 1;}
spicetify update
spicetify upgrade
spicetify  restore backup apply
tree /f
help curl
man curl
curl -h
curl -L https://google.com
curl -L https://google.com | save google.html
code google.html
curl -L https://google.com | save google.html
curl -L https://google.com | save google.html -f
curl -L https://github.com/u1dm/dotfiles/blob/646a966934fe7d630142fc485386a494b631a4a0/Mocha/wallpaper.png | save mocha.png
start mocha.png
curl -L https://raw.githubusercontent.com/u1dm/dotfiles/main/Mocha/wallpaper.png
curl -L -O https://github.com/u1dm/dotfiles/raw/main/Mocha/wallpaper.png
curl -L https://github.com/u1dm/dotfiles/blob/main/Mocha/wallpaper.png?raw=true
winget install neovim.neovim
gcc
cd C:\MinGW\bin\
gcc
gcc -help
gcc -v
GCC
gcc
c
cc
gcc
cd C:\MinGW\bin\
gcc
cd /
wsl
wsl --offline
wsl --list
winget install wsl
wsl --help
wsl --install
wsl --install ubuntu-22.04
rm google.html
rm rmchoco.ps1 mocha.png
git clone https://github.com/Chethan-L701/nvim-arch.git
mv nvim-arch C:\Users\Cheth\AppData\Local\nvim
rm -rfv ~\AppData\Local\nvim-data
wsl --install -d ubuntu-22.04
wsl --update
wsl
ubuntu2204.exe
gcc
gcc
exit
wsl
du
wsl
wsl --uninstall -d ubuntu-22.04
wsl -h
wsl --help
rm -rfv ~\fish-shell
rustup update
winget install zig.zig
zig
winget uninstall zig.zig
winget install cmake
winget install make
zig
clang -v
cd ~\AppData\Local\nvim\
npm i -g typescript-language-server
tsserver
git status
cd ~
cd Workspace\VSCode\Intership\Session1\
sed
winget in sed
winget install sed
winget install mbuilov.sed
sed
cd ..
cd ..
cd web\
cd Demo\
tsc
node out\index.js
nvim .bash_history
clangd
cd ~\AppData\Local\nvim\
cd `Workspace\Visual Studio\LeetCode\`
nvim ntuser.ini
cd Workspace\NuShell\
nvim demo.nu
code .
spicetify auto --transparent-window-controls
cd Workspace\VSCode\Intership\Session1\
CLEAR
npx http-server --cors
cd AppData\Roaming\
cd spicetify\
cd Themes\catppuccin\
spicetify auto --transparent-window-controls
spicetify auto --transparent-window-controls
spicetify auto --transparent-window-controls
spicetify config current_theme catppuccin
spicetify backup apply
spicetify apply
spicetify auto --transparent-window-controls
spicetify config color_scheme mocha
spicetify apply
spicetify auto --transparent-window-controls
cd AppData\Roaming\spicetify\Themes\catppuccin\
code .
spicetify config color_scheme mocha
spicetify apply
spicetify auto --transparent-window-controls
spicetify config color_scheme mocha
spicetify apply
spicetify auto --transparent-window-controls
spicetify config custom_apps stats
spicetify apply
spicetify config custom_apps ncs-visualizer
spicetify apply
spicetify config-dir
spicetify apply
spicetify config custom_apps ncs-visualizer
spicetify apply
hi
cargo run
cd Workspace\VSCode\Rust\hello_world\
git status
cd Workspace\VSCode\Rust\hello_world\
cd ~\AppData\Local\nvim\
cd ~\Workspace\VSCode\Rust\hello_world\
cargo run
cargo run 
git add .
exit
cd ~\Workspace\VSCode\Rust\hello_world\
cd ..
cargo new structs
cd structs\
cargo run
cleaaaaar
cargo run
nvim 
starship config
cd AppData\Local\
cd ..\Roaming\
cd Workspace\VSCode\Rust\structs\
spicetify upgrade
spicetify apply
winget install wez.wezterm
celar
winget uninstall sed
sed
cd Workspace\VSCode\Rust\structs\
cd `C:\Program Files (x86)\GnuWin32\`
cd bin
.\sed.exe
sed
sed
$env.SED
sed
cd Workspace\VSCode\Rust\structs\
cd ~\AppData\Local\nvim\
make
sed
make
winget install ninja-build
powershell.exe 
scoop
.
scoop
scoop install ninja
scoop install make
make
make -h
make -v
scoop install sed
sed -v
sed --version
cd ~\AppData\Local\nvim\
nvin -S session.nvim
nvim -S session.nvim
touch .wezterm.lua
nvim .wezterm.lua
cd scoop\
cd apps\
cmake
cmake -v
cmake --version
scoop install cmake
winget list
winget upgrade Discord
discord
spotify
cd Workspace\
mkdir C++
cd C++\
mkdir spaceship_operator
cd spaceship_operator\
mkdir build src
touch CMakeLists.txt
python
py
py --version
which
which py
mklink C:\Windows\py.exe C:\Windows\python.exe
mklink C:\Windows\python.exe C:\Windows\py.exe
python
cd Workspace\C++\spaceship_operator\
py -m venv
py -m venv .
rm -rfv .\*
mkdir build src
touch CMakeLists.txt
cd build\
cmake -G Ninja ..
cmake -G Ninja ..
cmake -G Ninja ..
cmake -G Ninja ..
tree /f
cmake -G Ninja ..
cmake -G Ninja ..
cmake -G Ninja ..
cmake -G Ninja ..
cmake -G Ninja .. -DCMAKE_BUILD_TYPE=Debug
cmake -G Ninja .. -DCMAKE_BUILD_TYPE=Release
clang-format -style=llvm -dump-config > .clang-format
clang-format -style=llvm -dump-config > .clang-format
clang-format -style=llvm -dump-config | save .clang-format
cmake -G Ninja .. -DCMAKE_BUILD_TYPE=Release
.\spaceship.exe
mv .clang-format ..\
cd ~\AppData\Local\nvim\
nvim -S session.nvim
cd Workspace\C++\spaceship_operator\
nvim -S session.nvim
cd ~\Workspace\C++\spaceship_operator\
nvim -S session.nvim
cd ~\AppData\Local\nvim\
scoop install ripgrep
nvim -S session.nvim
cd ~\Workspace\C++\spaceship_operator\
cd build\
cmake -G Ninja .. -DCMAKE_BUILD_TYPE=Release
.\spaceship.exe
nvim -S session.nvim
winget uninstall fz
winget uninstall fzf
scoop install fzf
nvim (fzf)
fzf
nvim (fzf)
cd ~\AppData\Local\nvim\
cd ~\AppData\Local\nvim\
git status
rm -rfv .\.git\*
rm -rfv .\.git
git init
gh
git remote add origin git@github.com:Chethan-L701/nvim.git
git config --global --add safe.directory C:/Users/Cheth/AppData/Local/nvim
git remote add origin git@github.com:Chethan-L701/nvim.git
git branch -m main
git branch
git branch -l
git status
git add .
git status
git commit -m "nvim config directory"
git push
git push origin main
git status
cd ..
rm -rfv .\nvim-data\*
cd nvim
git status
gopls
go install gopls
go install gopls@latest
nvim --veersion
nvim --version
scoop install nvim
scoop install neovim
winget uninstall neovim.neovim
scoop install neovim
nvim --version
open init.lua
open init.lua | length
cat init.lua | length
open init.lua | length
scoop install grep
scoop install grep
grep
scoop clean
scoop help
scoop cleanup
scoop install cat
cd Workspace\
mkdir billion
cd billion\
touch billion.py billion.cpp billion.c billion.js
touch billion.rs
rm billion.rs
a
rm billion.c
node billion.js
node billion.js
c++
clang++ -o bilion billion.cpp
.\bilion
clang++ -o bilion billion.cpp -O0
.\bilion
clang++ -o bilion billion.cpp -O2
.\bilion
clang++ -o bilion billion.cpp -O2
.\bilion
clang++ -o bilion billion.cpp -O2
.\bilion
objdump
scoop install objdump
code (fzf)
open billion.cpp | clip.exe
clang++ -o bilion billion.cpp
.\bilion
node billion.js
clang++ -o bilion billion.cpp
.\bilion
node billion.js
node billion.js
clang++ -o bilion billion.cpp
.\bilion
clang++ -o bilion billion.cpp -O3
.\bilion
clang++ -o bilion billion.cpp -O2
clang++ -o bilion billion.cpp -O2
.\bilion
clang++ -o bilion billion.cpp -O2
.\bilion
node billion.js
open billion.cpp | clip.exe
clang++ -o bilion billion.cpp
.\bilion
1000000000 * 1000000000
( 1000000000 * 1000000000 ) / 2
( 1000000000 * 1000000001 ) / 2
clang++ -o bilion billion.cpp
.\bilion
node billion.js
npx http-server --cors
code (fzf)
cd Workspace\billion\
py billion.py
py billion.py
.\bilion
node billion.js
clang++ -o bilion billion.cpp
.\bilion
clang++ -o bilion billion.cpp
.\bilion
node billion.js
nvim -S session.nvim
=~ | help
2 == 2
2 =~ 2
2 != 2
cd Workspace\
mkdir Rust
cd Rust
cargo new pattern_matching_enum
cd pattern_matching_enum\
rustup
rustup upgrade
cargo run
git branch -m main
cd ~\AppData\Local\nvim\
nvim -S session.nvim
git status
git add .
git commit -m "changes in nerd icons"
git log
lazygit
grep
scoop install  grep
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/3.11/grep-3.11-x64.exe | save grep.exe
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe
git config --global --unset https.proxy
git config --global --unset http.proxy
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
git clone --depth=1 https://github.com/mbuilov/grep-windows.git
mv grep-windows ~\
rm grep.exe grep.exe
cd grep-windows\
.\grep-3.11-x64.exe
ls | .\grep-3.11-x64.exe -G "arch"
mv grep-3.11-x64.exe ~\
rm -rfv grep-windows
cd scoop\
cd apps\
tree /f
cleae
mkdir misc
mv grep-3.11-x64.exe .\misc\
mv grep-3.11-x64.exe .\misc\
misc
misc.\misc
.\misc
mv misc grep-3.11-x64.exe
.\grep-3.11-x64.exe
mv grep-3.11-x64.exe grep.exe
mkdir misc
mv grep.exe ~\misc\
cd misc\
grep
grep.exe
$env.PATH
$env.Path
$env.Path
grep
grep -h
grep --help
wc
scoop install  wc
scoop install wc
scoop install objdump
cd scoop\
cd shims\
.\scoop
$env.Path
sccop
scoop
grep
scoop install wc
scoop install wget
wget
wget https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
git config --global --unset http.proxy 127.0.0.1:3030
wget https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
rm grep.exe
wget https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
git config --global --set http.proxy 127.0.0.1:3030
git config --global http.proxy 127.0.0.1:8087
wget https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
rm grep.exe
wget https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exc
git config --global --unset http.proxy
git config --global http.proxy
git config --global http.proxy 127.0.0.1:8087
git config --global http.proxy
git config --global --unset http.proxy
cleear
ls | grep "A"
ls | grep "A" | length
ls | grep "A" | awk
scoop install awk
perf
awk
zip
unzip
scoop install gawk
zip
unzip
scoop install unzip
stat
scoop install stat
scoop install Stat
scoop install coreutils
pwd
which pwd
tee
ls | grep "A" | wc -l
ls | grep "A" 
ls | grep "A" | wc -l
stat misc\grep.exe
stat
whoami
whoamiyes
yes
stat
stat
touch
wc
which wc
which sed
gdb
scoop install gdb
which sed
sed --version
cd misc\
git clone git://git.sv.gnu.org/sed
cd sed
make
make .
make
sed --version
clead
make
.\bootstrap
make
scoop install tree
scoop search gnu
scoop install regex
tar
cd `C:\Program Files (x86)\`
cd GnuWin32\
cd bin\
which tar
cd ~\AppData\Local\nvim\
py -m pip install ranger-fm
ranger
git status
fzf
cd AppData\Local\Programs\Python\Python312\Lib\site-packages\
cd ranger\
py .
ranger
cd core\
py .
cd ..
cd ranger\ls
cd ranger\
tree /f
scoop install ranger-cli
scoop install extras/ranger-cli
misc
cd misc
git clone https://github.com/ranger/ranger.git
less
cd ranger\
make
make .
python setup.py install --optimize=1 --record=install_log.txt
py -m pip install setuptools
python setup.py install --optimize=1 --record=install_log.txt
cd AppData\Local\Programs\Python\Python312\Lib\site-packages\
cd ~\AppData\Local\Programs\Python\Python312\Lib\site-packages\
cd ranger_fm-1.9.3-py3.12.egg\
cd ranger\
cd ..
rm -rfv ranger-*
rm -rfv ranger_*
rm -rfv ranger
cd misc\
rm -rfv ranger
cd sed
cd ..
rm -rfv sed
cd sed
rm -rfv 8
rm -rfv *
cd ..
rm sed
rm -rf sed
ps | where name = sed
ps
ps | where name == sed
cd Workspace\
cd Rust\
cd ..
cd billion\
rm billion.rs
cargo run billion_rust
cargo new billion_rust
cd billion_rust\
cargo run
cargo run RUST_BACKTRACE=1
.\target\debug\billion_rust.exe RUST_BACKTRACE=1
.\target\debug\billion_rust.exe --RUST_BACKTRACE=1
.\target\debug\billion_rust.exe RUST_BACKTRACE=1
cargo run
cargo run
ii
cargo run
cargo run
cd ..
clang++ -o billion.exe billion.cpp
.\billion.exe
node billion.js
cd billion_rust\
cargo run
cd ..
.\billion.exe
node billion.js
.\billion.exe
cd billion_rust\
cargo build --Release
cargo build --release
.\target\release\
billion_rust.exe
.\billion_rust.exe
cd ..
clang++ -o billion.exe billion.cpp -Ofast
cd ..
clang++ -o billion.exe billion.cpp -Ofast
.\billion_rust.exe
.\billion.exe
py billion.py
cd ..
nvim billion.py
npm i -g pyright
pyright
pyright billion.py
cd ~\AppData\Local\nvim\
cd Workspace\billion\
nvim billion.py
nvim billion.py
regex
which grep
def sum [...vars: int] { mut sum: int = 0; for $var in $vars { $sum = $sum + $var } ; print $"The sum is ($sum) "}
sum 1 2 3 4 5 6 7 8 9 
let env.Hello = hi
let Hello = hi
cd AppData\Local\nvim\
rm session.nvim
git status
git add .
git status
git commit -m "added oil.nvim and changed some keymaps"
git push origin main
lua
cd AppData\Local\nvim-data\
rm -rfv tree-sitter-norg
cd AppData\Local\nvim\
cd ~\AppData\Local\nvim\
git status
cd ~\AppData\Local\nvim\
cd ~\AppData\Local\nvim\
cd ~\AppData\Local\nvim\
git status
exit
cd ~\AppData\Local\nvim\
cd ~\Workspace\Rust\
cd pattern_matching_enum\
cd ~\AppData\Local\nvim\
git status
git log
git add .
git commit -m "added colorschemes: onedark, tokyonight and kanagawa."
git push origin main
scoop install ffmpeg
ffprobe
pwd
which pwd
mkdir Pictures
cd Pic
cp .\OneDrive\Pictures\* .\Pictures\
cp -rf .\OneDrive\Pictures\* .\Pictures\
cd Pictures\
ffprobe.exe  neon.png
ffprobe neon.png
cd Videos\
ffplay `2023-11-11 18-55-03.mkv`
ffplay -help
ffplay -help | save ffplay-help.txt
nvim ffplay-help.txt
ffmpeg -help | save ffmpeg-help.txt
nvim ffmpeg-help.txt
ffplay `2023-11-11 18-55-03.mkv` 800x400
ffplay -i `2023-11-11 18-55-03.mkv` screenrec.mp4
ffplay -i '2023-11-11 18-55-03.mkv' screenrec.mp4
cd Videos\
ffplay 2023-11-11_19-17-46.mkv
ox67577af
ox6757
0x6757afff
0x6757afff |into binary
30day
30day | into sec
30day
30day | into days
30day | into day
echo $env.Path
which sed
~\scoop\shims\
.\sed.exe
.\sed.exe -v
.\sed.exe --version
scoop install fileutils
scoop upgrade
scoop update
make --version
scoop install make
cd scoop\shims\
cd C:
cd \
cd `Program Files (x86)\GnuWin32\`
cd bin\
rm sed.exe make.exe
sudo rm sed.exe make.exe
cd `Program Files (x86)\GnuWin32\`
cd \
cd `Program Files (x86)\GnuWin32\`
rm sed.exe make.exe
cd bin\
rm sed.exe make.exe
sed
which sed
make --version
which stat
which stat
cd scoop\shims\
which wget
which wc
which awk
awk -v
awk -V
scoop install tar
which tar
tar -v
tar -V
tar --version
cmake --version
scoop install cmake
scoop install main/sort-uniq-wc
scoop install main/msys
cat
bash
msys
scoop install main/binutils
objdump
scoop install main/diffutils
diff
scoop install fileutils
scoop install findutils
find
which find
help find
find.exe
find.exe --help
find.exe -h
find.exe 
find.exe --version
find.exe . 
find.exe
find.exe . 'hi'
find.exe -t file 
which find.exe
openssl
scoop install opensll
scoop install openssl
which curl
scoop install bsdtar
scoop install tar
scoop update all
scoop update --all
scoop status
scoop uninstall cmake
scoop uninstall gdb
scoop uninstall gdbgrep
scoop uninstall grep
scoop uninstall misc
scoop status
cmake --version
which tar
which find
which find.exe
fint.exe .
find.exe . 
find.exe . --max-depth=1
find.exe . --depth=1
find.exe -h
find.exe --help
find.exe --version
find.exe -depth 1 .
find.exe . -depth 1 
find.exe . -maxdepth=1
find.exe . -maxdepth 1
find.exe . -maxdepth 1 "vim"
find.exe . -type f -maxdepth 1 
find.exe . -maxdepth 1 -type f
find.exe . -maxdepth 1 -type f "vim"
find.exe -maxdepth 1 -type f .
cleaer
stat
which tar
tar -cvf ~\AppData\Local\nvim
tar -cv ~\AppData\Local\nvim
tar -cvrf ~\AppData\Local\nvim
tar --help
tar -cvrf ~\AppData\Local\nvim nvim
tar -cvrf ~\AppData\Local\nvim\* nvim
tar -cvf ~\AppData\Local\nvim\* nvim
cd ~\AppData\Local\nvim\
cd ~\AppData\Local\nvim-data
rm tree-sitter-norg_meta tree-sitter-norg
rm  -rf tree-sitter-norg_meta tree-sitter-norg
rm  -rf tree-sitter-norg
rm  -rf tree-sitter-norg
killall
rm  -rf tree-sitter-norg
gh login
gh auth
gh auth login
gh delete repo newsletter
gh repo
gh repo delete newsletter
gh auth refresh -h github.com -s delete_repo
gh repo delete newsletter
cd Workspace\
mkdir Python
cd Python\
git clone git@github.com:Chethan-L701/Student-registry.git
cd Student-registry\
py pyClasses.py
py pyClasses.py
py pyClasses.py
git status
status
let status = git status
stutus
status
def status [] { git status  }
status
alias
git add .
git rm --cached session.vim
touch .gitignore
git add .gitignore
git rm --cached .vscode
git rm  -r --cached .vscode
status
git commit -m "cleanup after 2 years"
git push origin main
git push origin master
py pyClasses.py
git branch main
git checkout main
git branch -m rewrite
git branch
nvim ~\AppData\Local\nvim\after\plugin\nvim-lsp.lua
nvim ~\AppData\Local\nvim\lua\format.lua
py pyClasses.py
py pyClasses.py
py pyClasses.py
py pyClasses.py
py pyClasses.py
py pyClasses.py
py pyClasses.py
py pyClasses.py
exit
ls -a
ls --all
cd Workspace\Rust\pattern_matching_enum\
cd ~\AppData\Local\nvim
cd Workspace\Rust\pattern_matching_enum\
> cargo install cargo-mommy
cargo install cargo-mommy
cd Workspace\Rust\
cargo new adder --libs
cargo new adder --lib
cd adder\
cargo mommy CARGO_MOMMYS_MOODS= "yikes" test
cargo mommy test CARGO_MOMMYS_MOODS= "yikes" 
cargo test
cargo mommy test CARGO_MOMMYS_MOODS= "yikes" 
cargo mommy CARGO_MOMMYS_MOODS= "yikes" test
nu --config
nu config
echo $env.config
echo $env.config-dir
code C:\Users\Cheth\AppData\Roaming\nushell\env.nu
$env.CARGO_MOMMYS_MOODS
cd Workspace\Rust\adder\
mommy test
mommy test
random 
[1 2 3 4 5  6 7 8 9] | random
let a = [1 2 3 4 5  6 7 8 9]
$a.1
$a.10
$a.2
exec
do
random int 0..9
$a.(random int 0..9)
$a.( random int 0..9 )
let r = (random int 0..9)
$a.$r
$r
let b = [1, 2, 3, 4, 5]
$b[1]
$b.0
rand
mommy test
$a
$a | get (random int 0..9)
mommy
mommy init hi
rm  -rfv hi
"hi " + "hello"
$a | length 
load-env { a : "hi" }
$env.a
load-env { a : "hello" }
$env.a
$env.a
$a
1..9
random int 0..9
$a.9
random int 0..<9
mommy
cd Workspace\Rust\adder\
mommy
mommy
cd Workspace\Rust\adder\
cargo add rand
cd Workspace\Rust\adder\
mommy
mommy
mommy
mommy
cd C++\
cd Workspace\C++\
cd LeetCode
mkdir LeetCode
cd LeetCode
pip
pip3
cd ..
cd ..
cd Rust\
mkdir LeetCode
cd LeetCode
cargo new P1_TwoSum
cd P1_TwoSum\
cd ..
rm  -rfv P1_TwoSum\
cd ..
rm  -rfv LeetCode\
cargo new LeetCode
rm  -rfv LeetCode\
rm  -rfv LeetCode 
cargo new LeetCode --lib
cd LeetCode
cd ..
rm  -rfv LeetCode 
cargo new leet_code
cd leet_code\
cargo
cd Workspace\Rust\leet_code\
tree /f
g
tree /f
cd ..
rm  -rfv leet_code\
l
rm  -rfv leet_code\
cd Workspace\Rust\leet_code\
cd ..
rm  -rfv leet_code\
cd Workspace\Rust\leet_code\
cd ..
rm  -rfv leet_code\
rm  -rfv leet_code
ps
kill 199490
ps
19440
cd Workspace\Rust\
rm  -rfv leet_code
cd leet_code\
rm  -rfv *
cd ..
rm  -rfv leet_code
rmdir
rmdir leet_code
sudo rmdir leet_code
scoop install sudo
wget https://raw.githubusercontent.com/lukesampson/psutils/c7116ac143ca81f223e6091d0974f45ac241eb1d/sudo.ps1
cd ~\misc\
git clone https://raw.githubusercontent.com/lukesampson/psutils.git
scoop install psutils
sudo
scoop install psutils
cd ~\Workspace\Rust\
sudo rmdir leet_code
tree /f leet_code
rm  -rfv leet_code
cd ~\Workspace\Rust\
rm  -rfv leet_code
cargo new leet_code
cd leet_code\
cd src
cd ..
cargo new
cargo add
mkdir p1_twosum
touch p1_twosum\mod.rs
touch p1_twosum\test.rs
tree /f
mv p1_twosum src\
tree /f
cargo add rand
mommy
cargo run
cargo test
cargo test
exit
mommy
mommy
mommy
mommy
cargo add math
cargo remove math
cd Workspace\Rust\
mommy test p2_palindrome
mommy test p2_palindrome::
cargo test p2_palindrome::
mommy (test, p2_palindrome::)
mommy ('test', 'p2_palindrome::')
mommy ('test')
mommy ('test')
mommy [ 'test']
mommy [ 'test' ]
mommy('test') 
mommy 'test'
mommy 'test' --hi
mommy 'test' -hi
mommy
cargo test p2_palindrome::
tree /f
which tree
scoop install tree
cd ..
sudo rm -rfv adder
runas /user:Administrator /savecred rm -rfv adder
runas /user:Administrator rm -rfv adder
runas /user:Administrator "rm -rfv adder"
cd Workspace\
cd Python\
py pyr.py
py pyr.py
py pyr.py
py pyr.py
py pyr.py
nvim pyr.py
py - m pip upgrade
py -m pip upgrade
py -m pip update
py -m pip install pip
scoop install unxutils
grep --help
grep --version
grep
scoop uinstall uxutils
scoop
scoop uninstall uxutils
scoop uninstall unxutils
scoop install findutils
grep --version
wc 
make --version
scoop install diffutils
scoop uninstall findutils
scoop install findutils
scoop uninstall diffutils
scoop install diffutils
scoop uninstall coreutils
scoop install coreutils
scoop install binutils
fzf | xargs nvim
msys
cd Workspace\
mkdir Javascript
cd Javascript\
touch session3.js
node session3.js
npm 
node
node session3.js
node session3.js
node session3.js
node session3.js
node session3.js
node session3.js
node session3.js
node session3.js
node session3.js
node session3.js
node session3.js
node session3.js
node session3.js
node session3.js
node session3.js
node session3.js
node session3.js
node session3.js
clesr
fzf | xargs nvim
nvim ffjq.js
nvim (fzf)
gdb
scoop install gdb
scoop update all
scoop update
scoop update *
cd scoop\shims\
scoop update *
scoop
scoop update
cd Workspace\C++\
cd spaceship_operator\
cd build\
rm -rfv *
cmake -G Ninja .. -DCMAKE_BUILD_TYPE=Debug
.\spaceship.exe
gdb spaceship.exe
cd ..
cd build\
gdb spaceship.exe
cmake -G Ninja .. -DCMAKE_BUILD_TYPE=Debug
gdb spaceship.exe
cmake -G Ninja .. -DCMAKE_BUILD_TYPE=Debug
rm -rfv *
cmake -G Ninja .. -DCMAKE_BUILD_TYPE=Debug
gdb spaceship.exe
rm -rfv *
cmake .. -DCMAKE_BUILD_TYPE=Debug
make
make .
rm -rfv *
cmake -G Make .. -DCMAKE_BUILD_TYPE=Debug
cd Workspace\C++\
cd build\
cd spaceship_operator\build\
cmake .. -DCMAKE_BUILD_TYPE=Debug
rm -rfv *
cmake .. -DCMAKE_BUILD_TYPE=Debug
cl.exe
rm ffjq.js
cd Workspace\C++\spaceship_operator\build\
cmake .. -DCMAKE_BUILD_TYPE=Debug
bscmake.exe
bscmake.exe .
make
bscmake.exe .
cd ..
cl -o hi src\main.cpp
cl src\main.cpp
clang
cd Workspace\C++\spaceship_operator\build\
rm -rfv *
cmake -G Ninja .. -DCMAKE_BUILD_TYPE=Debug
ninja -g
ninja -d
ninja -d spaceship
ninja -d DEBUG
ninja -d list
ninja -d stats
gdb spaceship.exe
cd ..
cd build\
rm -rfv *
cmake -G Ninja .. -DCMAKE_BUILD_TYPE=Debug
open compile_commands.json
gdb spaceship.exe
rm -rfv *
cd ..
rm build
rm -rfv build
which nu
exit
fontforge
scoop install fontforge
cd Workspace\font\
cd `Cartograph CF\`
ls | each { |it| ^echo $it.name }
ls -l
ls -l| each { |it| ^echo $it.name }
mkdir patched
mv ~\Downloads\FontPatcher.zip
mv ~\Downloads\FontPatcher.zip .\
unzip.exe  FontPatcher.zip
fontforge -script font-patcher .\patched\
fontforge
./font-patcher CartographCF-Bold.ttf
sh
cd `Workspace\font\Cartograph CF\`
py -m pip install python-fontforge
cd `Workspace\font\Cartograph CF\`
docker run --rm -v .\CartographCF-Bold.ttf:/in:Z -v .\patched\CartographCFNF-BOLD:/out:Z nerdfonts/patcher [OPTIONS]
ls patched\
docker run --rm -v .\CartographCF-Bold.ttf:/in:Z -v .\patched\CartographCFNF-BOLD:/out:Z nerdfonts/patcher
ls patched\
cd ..
mv `Cartograph CF\` `CartographCF\`
docker run --rm -v ./CartographCF:/in:Z -v ./patched/CartographCF:/out:Z nerdfonts/patcher
docker run --rm -v CartographCF:/in:Z -v patched/CartographCF:/out:Z nerdfonts/patcher
docker run --rm -v CartographCF:/in:Z -v patched:/out:Z nerdfonts/patcher
docker run --rm -v ./CartographCF:/in:Z -v ./patched:/out:Z nerdfonts/patcher
fzf
docker run --rm -v ./CartographCF:/in:Z -v ./patched:/out:Z nerdfonts/patcher
docker run --rm -v ~\Workspace\font\CartographCF:/in:Z -v ~\Workspace\font\patched:/out:Z nerdfonts/patcher
tree /f
rm -rfv .cache\
rm -rfv .cache\
ts-node
npm i -g ts-node
ts-node
cd AppData\Local\nvim\
cat session.nvim
cat session.nvim | length
cat session.nvim | wc -l
cat session.nvim session.vim | wc -l
cat */*
cat */* | wc -l
cd Workspace\Javascript\
node session4.js
node session4.js
a
node session4.js
ts-node session4.ts
rm session4.js
tsc session4.ts
curl -L https://www.google.com | save google.html
node 
nvim session4.js
which node
rm google.html ffjq.js
npm i -g electron electron-build
electron
electron --help
cd Workspace\VSCode\Intership\Session1\
electron .
electron --help
electron .\index.html
ps
ps | sort-by mem | reverse
scoop install btop++
scoop install btop
scoop install 'extras/vcredist2022'
scoop install extras/vcredist2022
scoop add extras
scoop help
scoop import extras
btop
btop
killall
btop
reg.exe 
which reg
scoop update fzf
scoop update all
scoop update
scoop 
scoop update *
scoop update scoop
scoop update
scoop list
scoop list | to table
scoop list | awk -F' ' '{print $1}'
scoop list | awk -F' ' '{print $0}'
scoop list | awk -F' ' {print $0}
scoop list | foreach { |it| ^echo $it }
scoop list | each { |it| ^echo $it }
scoop list 
cut
scoop list | cut -f3 -d" "
scoop list | cut -f3 -d " "
scoop list | cut -f3 -d " "
scoop list | cut -f3 -d " "| xargs echo
scoop list | each { |it| ^echo $it }
scoop list
open temp.txt | xclip
open temp.txt | clip
scoop update 7zip binutils btop cacert coreutils diffutils ffmpeg findutils fzf gawk gdb gzip innounp make msys neovim ninja openssl psutils ripgrep sed sort-uniq-wc sudo tar unzip wget
scoop install sudo
scoop uninstall sudo
scoop install psutils
scoop update psutils
scoop status
cd Workspace\VSCode\Intership\Session1\
electron-build .\index.html
electron-build
npm i -g electron-build
electron-build .\index.html
electron-build
npx http-server --cors
npm init
npm i electron
npm i electron --save-dev
touch main.js
npx run start
npm run start
i
npm run start
electron .\index.html
npm run start
electron .
electron .
electron .\index.html
electron --help
electron .
electron .
electron .
electron .
a
npm create vite@latest my-vue-app -- --template react
rm *
rm -rf *
npm create vite@latest session5-react -- --template react
cd session5-react\
npm install
du
npm start
npm start dev
node --version
which node
stat C:\Program Files\nodejs\node.exe
stat
info
log
C:\Program Files\nodejs\node.exe | info
`C:\Program Files\nodejs\node.exe` | info
stst
stast
stat
stat C:\Program Files\nodejs\node.exe
stat "C:\Program Files\nodejs\node.exe"
stat `C:\Program Files\nodejs\node.exe`
stat `C:\Program Files\nodejs\node.exe`
cd Workspace\VSCode\Intership\Session5\session5-react\
npm start dev
cd session5-react\
npm start dev
npm dev
npm run dev
CLEAR
npm i electron --save-dev
touch src/electron.js
npm run start
electron electron.js
electron index.js
npm run build
electron .
electron dist\index.html
electron .\dist\index.html
cd Workspace\VSCode\Intership\Session1\
npm run start
electron .\dist\index.html
cd Workspace\VSCode\Intership\Session5\session5-react\
cd dist\
electron index.html
tree /f
electron index.html
npm run start
cd Workspace\VSCode\Intership\Session5\session5-react\dist\
http-server --cors
electron index.html
cd ..
rm -rf dist
npm run build
npm run start
vite
npm create-react-app electron-react-demo
cd Workspace\VSCode\Intership\Session5\
stat .
stat */*
du
cd ..
cd ..
cd ..
cd Javascript\
cd ..
fzf
fzf
cd Workspace\VSCode\Intership\Session1
electron index.html
npx create-react-app electron-react-demo
du
npm init
npm install electron
cd electron-react-demo\
npm install electron
npm audit
npm audit fix
npm audit fix --force
cd ..
rm -rf electron-react-demo
rm -rf
rm -rf *
npx create-react-app electron-react-demo
cd electron-react-demo\
npm install electron
npx run start
npm run start
npm run build
electron .
electron .\build\index.html
cd..
cd ..
cd electron-react\electron-react-demo\
electron .
electron .\build\index.html
cd electron-react\electron-react-demo\
cd Workspace\VSCode\Intership\electron-react\electron-react-demo\build\
electron index.html
cd Workspace\VSCode\Intership\Session1\
npm run build
serve
wait-on
cd ..
cd electron-react\electron-react-demo\
cd dist\
cd build\
http-server --cors
electron index.html
npm rin dev
npm run dev
npm run build
npm run build
npm run build
cd Workspace\VSCode\
du
cd Workspace\VSCode\
du
du | sort-by physical | reverse
npm run dev
cd /
du
du | sort-by physical | reverse
npm init -y
mkdir backend
mkdir frontend
nopm i nodemon express mongoose
npm i nodemon express mongoose
npm run dev
npm run dev
npm run dev
node --trace-deprecation
npx nodemon backend/index.js --trace-deprecation
npx run dev
npm run dev
npm run dev
git init
touch .gitignore
npm run dev
gh repo create dev-express-backend --public
git remote add origin git@github.com:Chethan-L701/dev-express-backend.git
git status
git status
git add .
git status
git status
git add .
git commit -m "created repo"
git branch -m main
git push origin main
npm run dev
git add .
git commit -m "added patch request for the book route"
git push origin main
http-server --cors
cd Workspace\VSCode\Intership\Session1\
node --version
node main.js
node main.js
cd Workspace\VSCode\Intership\Session1\
cd Workspace\VSCode\Intership\Session6
scoop status
scoop update
scoop status
scoop update scoop
scoop update fzf
scoop install wezterm
caergo install wezterm
cargo install wezterm
scoop install extras/wezterm
scoop bucket add extras
scoop install extras/wezterm
fzf
ranger
wezterm
spicetify upgrade
spicetify restore backup apply
firefox --kisok
cd AppData\Local\nvim\
cd Workspace\VSCode\Intership\Session6
npm run dev
npm run dev
git pull origin main
npm run dev
npm create vite@latest frontend --template react
npm install
cd frontend\
npm install
cd frontend\
npm install -D tailwindcss postcss autoprefixer
npx tailwindcss init -p
npm run dev
i
cd Workspace\VSCode\Intership\Session7
cd AppData\Local\nvim\
cd Workspace\VSCode\Intership\Session7
npm install react-router-dom
cd Workspace\
mkdir Plane
cd Plane\
git clone https://github.com/pranavk22/case-study.git
code .
cd case-study\flight-booking-frontend\
npm install
cd frontend\
cd ..
npm create vite@latest frontend --template react
cd frontend\
npm run dev
npm install
npm install -D tailwindcss postcss autoprefixer
npx tailwindcss init -p
cd Workspace\VSCode\Intership\Session7
npm run dev
c:\Users\Cheth\Workspace\Airbus\frontend
cd frontend\
npm install -D tailwindcss postcss autoprefixer
npx tailwindcss init -p
npm install react-router-dom
npm install react-icons
cd Workspace\VSCode\Intership\Session7
cd Workspace\
cd VSCode\
cd Intership\
npm run dev
cd frontend\
cd backend
npm init -y
cd Workspace\
cd Intership\
cd VSCode\Intership\session7\
cd Workspace\VSCode\Intership\Session7
cd backend\
cd ..\..\session6\backend\
cd ..
npm install mongoose express nodemon
npm run dev
npm run dev
npm run dev
cd frontend\
npm install axios
npm install cors
cd ..
cd ..
cd ..
cd ..
cd backend\
npm install cors
npm run dev
cd Downloads\compressed\
cd session_6\
npm run dev
npm run dev
cd frontend\
cd backend\
cd frontend\
npm install react-modal
cd Downloads\compressed\
git init
git status
git add .
git rm --cached .
git rm -r --cached .
git add .gitignore
git add frontend\.gitignore
git add backend\.gitignore
git add .
git status
git commit -m "new project"
git branch -m main
gh repo create user-management-system --public
git remote add origin git@github.com:Chethan-L701/user-management-system.git
git push origin main
cat */* | wc -l
cd Workspace\Airbus\
du
cd Workspace\Airbus\backend\
npm run dev
cd frontend\
cd backend\
git status
git add .
git commit -m "fix typos"
git push origin main
scoop update
rustup upgrade
node --version
rustc --version
scoop list
scoop status
sccop update ripgrep
scoop update ripgrep
winget upgrade
winget upgrade Git.Git
spicetify upgrade
spicetify restore backup apply
spicetify auto --transparent-window-controls
winget upgrade
winget upgrade nushell.nushell
nu --version
help nu
nu --help
nu --version
winget upgrade CMake
winget upgrade
winget upgrade GitHub.cli
spicetify --version
winget upgrade LLVM
CLEAR
NVIM
 
cd Workspace\Python\
mkdir demo
cd demo
touch demo.py
cd AppData\Local\nvim\
cd Workspace\Python\demo\
nivm
py demo.py
scoop status
scoop update
scoop status
scoop update ripgrep
clang -v
winget upgrade LLVM
winget upgrade
cd Workspace\
du
nu config
nu --config
celar
nu --help
nu --ide-hover
history | fzf
$env
$env.config
code C:\Users\Cheth\AppData\Roaming\nushell\env.nu
$env.nu_config
ls | where name == "session.nvim"
ls | where name == "session.nvim" or name == "session.vim"
ls | where name == "session.nvim" or name == "session.vim" | length
mkdir demo
cd demo
ls | where name == "session.nvim" or name == "session.vim" | length
cd ..
rm demo
cd demo
ls | where name == "session.nvim" or name == "session.vim" | length
ls | where name == "session.nvim" or name == "session.vim" | 
<\n>
ls | where name == "session.nvim" or name == "session.vim" | get name
ls | where name == "session.nvim" or name == "session.vim" | get name$1
ls | where name == "session.nvim" or name == "session.vim" | get name.1
ls | where name == "session.nvim" or name == "session.vim" | sort-by modified 
ls | where name == "session.nvim" or name == "session.vim" | sort-by modified | reverse
ls | where name == "session.nvim" or name == "session.vim" | sort-by modified | reverse | get name.0
vi
status
mommy
cargo mommy 
cargo mommy test
mommy
cd Videos\
ffplay 2023-11-30_12-19-52.mkv
winget upgrade
cd Workspace\
cd VSCode
mkdir JavaScript
cd JavaScript\
mkdir manipulate_json
cd manipulate_json\
code .
tsc init
tsc --init
npm init -y
npm run start
node --version
cd Workspace\Airbus\
cd backend\
cd Workspace\Airbus\backend\
tsc
tsc
alias start="npm dev start"
alias start = "npm dev start"
alias start = npm dev start
start
alias start = (npm dev start)
alias start = ( npm dev start )
ll
npm run start
scoop status
scoop update
scoop status
sccop update ripgrep
scoop update ripgrep
winget upgrade
spicetify --version
alias start = npm dev start
start
alias start = npm run start
start
npm
npm update
scope
scope commands
winget upgrade
cd Workspace\Airbus\backend\
cd ..
status
status
git rm --cached session.vim
git rm --cached session.vim
git status
.gitignore
vi
vi
status
git add .gitignore
status
git commit -m "update .gitignore file"
cd Workspace\VSCode\
cd JavaScript\
cd manipulate_json\
cd backend\
cd frontend\
which tail.exe 
scoop status
scoop update
scoop status
winget upgrade
winget upgrade CMake
winget upgrade
winget upgrade Spicetify
winget upgrade Spicetify --force
spicetify --version
spicetify restore backup apply
spicetify auto --transparent-window-controls
winget upgrade
cd Workspace\C++\
mkdir misc
cd misc\
clangd
clang
clang++
llvm
clang++
cd Workspace\C++\
cd misc\
clang++ -0 test to_string.cpp
clang++ -o test to_string.cpp
.\test
cd Workspace\C++\AdventOfCode2023\
cd out
cd build\
cd ..
cmake -G Ninja ..
cd ..
nvim CMakeLists.txt
cd out
cmake -G Ninja ..
.\AdventOfCode2023.exe
cd ..
nvim CMakeLists.txt
cd out
ls | where name != "build"
ls | where name != "build" | rm -rf
ls | where name != "build" | each { |it| ^echo $it}
ls | where name != "build" | each { |it| ^echo $it.name}
ls | where name != "build" | each { |it| ^rm -rf $it.name}
cd Workspace\C++\AdventOfCode2023\
git status
git branch -m main
git commit -m "repository for aoc2023"
cd AppData\Local\
cd ..
cd Roaming\
cd BetterDiscord\
cd themes\
cp ~\Downloads\DarkMatter.theme.css .\
cd AppData\Roaming\BetterDiscord\themes\
mv ~\Downloads\ClearVision_v6.theme.css .\
cd AppData\Roaming\BetterDiscord\themes\
cp ~\Downloads\discord.png .\
cd AppData\
cd \
cd `Program Files\Microsoft Visual Studio\`
cd \
cd AppData\Roaming\spicetify\Themes\catppuccin\
spicetify restore backup apply
spicetify auto --transparent-window-controls
cd AppData\Roaming\spicetify\Themes\catppuccin\
cd Workspace\Airbus\
NVIM
cd AppData\Local\nvim\
cd AppData\Local\nvim\
vi
scoop update
scoop install ineutils
sccop install pueue
scoop install pueue
firefox
yes
pueue add yes
pueue
pueue -d
pueued -d
pueue add yes
pueue status
pueue kill 0
pueue status
pueue status
pueue kill
pueue status
pueue clean
pueue status
pueue add yes
pueue status
pueue kill
pueue status
def add [n] { mut sum = 0; for $i in 1..$n { $sum = $sum + $i; } }
add 10
def add [n] { mut sum = 0; for $i in 1..$n { $sum = $sum + $i; }; echo $sum; }
add 10
add 100
add 1000
add 100000
add 10000000
add 100000000
add 50000000
pueue add ( add 50000000 )
pueue add add 50000000 
alias add5 = add 50000000
add5
pueue add add5
pueue add nvim
pueue add yes
pueue status
killall pueue
btop
pueued -d
pueue add yes
pueue add add5
pueue status
pueue kill
cd AppData\Local\nvim\
winget upgrade
scoop update
scoop status
tree /f
tree.exe /f
tree /f
tree /f | length
tree /f | grep -G "lua"
tree /f | grep -G cat
tree /f
status
git add .
status
nvim .gitignore
git rm --cached session.nvim
git status
git add .gitignore
git commit -m "organinsed themes"
git push origin main
cd Workspace\
\
cleat
cmd 
cmd --help
cleat
 | fzf
history | fzf
$env.nu_config
cd AppData\Local\nvim\
vi
vi
cd Workspace\
cd Workspace\Rust\
cd adder\
nivm
cd AppData\Local\nvim\
vi
vi
cd Workspace\Rust\leet_code\
nvimm
vi
cd Workspace\Rust\leet_code\
cd AppData\Local\nvim\
vi
vi
vi
cd Workspace\Rust\
cd /
$env.STARSHIP_SHELL
$env.STARSHIP
$env.STARSHIP_SESSION_KEY
touch starship.toml
nvim $env.nu_config
$env.HOMEPATH
source $env.nu_config
nvim $env.nu_config
$env.HOMEPATH
nvim AppData\Roaming\nushell\env.nu
$env.STARSHIP_CONFIG
nvim $env.STARSHIP_CONFIG
cd AppData\Local\nvim\
git status
nvim $env.STARSHIP_CONFIG
nvim $env.STARSHIP_CONFIG
nvim $env.STARSHIP_CONFIG
cd Workspace\Rust\
cd pattern_matching_enum\
status
nvim $env.STARSHIP_CONFIG
nvim $env.STARSHIP_CONFIG
nvim $env.STARSHIP_CONFIG
a
nvim $env.STARSHIP_CONFIG
cd AppData\Local\nvim\
xlear
cd Workspace\Rust\pattern_matching_enum\
cd AppData\Local\nvim\
cd Workspace\Rust\pattern_matching_enum\
cd Workspace\Rust\pattern_matching_enum\
touch starship.toml
rm starship.toml
spicetify config custom_apps marketplace
spicetify apply
cd Workspace\C++\
cd misc
clang++ -o test to_string.cpp
.\test
cd ..
cd AdventOfCode2023\
cd AdventOfCode2023\
cd Workspace\Airbus\
cd AppData\Local\nvim\
cd demo.cxx
nvim demo.cpp
status
git add .
git commit -m "cleanup in barbecue and lualine colors and icons"
git push origin main
fzf
nvim (fzf)
fvi
history | fzf
history | fzf | split-by "|"
status
status
cleatr
cd Workspace\C++\misc\
ld
touch day4.cpp
cd Workspace\C++\AdventOfCode2023\include\
nvim (fzf)
clang++ -o day4 day4.cpp
clang++ -o day4 day4.cpp ; .\day4
clang++ -o day4 day4.cpp ; .\day4
clang++ -o day4 day4.cpp -std=c++2a ; .\day4
clang++ -o day4 day4.cpp -std=c++20 ; .\day4
clang++ -o day4 day4.cpp -std=c++20 ; .\day4
clang++ -o day4 day4.cpp -std=c++20 ; .\day4
clwar
clang++ -o day4 day4.cpp -std=c++20 ; .\day4
clang++ -o day4 day4.cpp -std=c++20 ; .\day4
clang++ -o day4 day4.cpp -std=c++20 ; .\day4
clang++ -o day4 day4.cpp -std=c++20 ; .\day4
clang++ -o day4 day4.cpp -std=c++20 ; .\day4
clang++ -o day4 day4.cpp -std=c++20 ; .\day4
dif
diff
clang++ -o day4 day4.cpp -std=c++20 ; .\day4
clang++ -o day4 day4.cpp -std=c++20 ; .\day4
clang++ -o day4 day4.cpp -std=c++20 ; .\day4
clang++ -o day4 day4.cpp -std=c++20 -g; .\day4
gdb day4
clang++ -o day4 day4.cpp -std=c++20 -g; .\day4
clang++ -o day4 day4.cpp -std=c++20 -g; .\day4
clang++ -o day4 day4.cpp -std=c++20 -g; .\day4
clang++ -o day4 day4.cpp -std=c++20 -g; .\day4
clang++ -o day4 day4.cpp -std=c++20 -g; .\day4
clang++ -o day4 day4.cpp -std=c++20 -g; .\day4
clang++ -o day4 day4.cpp -std=c++20 -g; .\day4
clang++ -o day4 day4.cpp -std=c++20 -g; .\day4
clang++ -o day4 day4.cpp -std=c++20 -g; .\day4
clang++ -o day4 day4.cpp -std=c++20 -g; .\day4
clang++ -o day4 day4.cpp -std=c++20 -g; .\day4
clang++ -o day4 day4.cpp -std=c++20 -g; .\day4
touch day4.js
node day4.js
node day4.js | save day4.json
clang++ -o day4 day4.cpp -std=c++20 -g; .\day4
clang++ -o day4 day4.cpp -std=c++20 -g; .\day4
clang++ -o day4 day4.cpp -std=c++20 -g; .\day4 | save day4_cpp.txt
:q
cat Workspace\C++\misc\day4.cpp
cat Workspace\C++\misc\day4.cpp | clip
cp Workspace\C++\misc\input.txt Workspace\C++\AOCmisc\input.txt
cd Workspace\C++\misc\
clang++ -o day4 day4.cpp -std=c++20 -g; .\day4
node day4.js
node day4.js
node day4.js
node day4.js
mv .\day4.js .\day4.mjs
node day4.mjs
scoop update
scoop status
scoop update openssl
winget upgrade
spicetify upgrade
winget upgrade
winget upgrade Spicetify --force
spicetify apply
winget upgrade CMake
cd AppData\Local\nvim\
nvim lua\search-conf.lua
nvim lua\plugins.lua
vi
status
git add .
status
cleat
cd AppData\Local\nvim\
status
winget upgrade Spotify
spotify
winget upgrade
winget upgrade GitHub.cli
winget upgrade
cd AppData\Local\nvim\
lazygit
status
git push origin main
cleat
mkdir scripts
cd scripts
http get https://api.github.com/repos/Chethan-L701/nvim | get init.lua
http get https://api.github.com/repos/Chethan-L701/nvim
http get https://api.github.com/repos/Chethan-L701/nvim/main
http get https://api.github.com/repos/Chethan-L701/nvim/main/init.lua
http get https://api.github.com/repos/Chethan-L701/nvim/main/braches
http get https://api.github.com/repos/Chethan-L701/nvim/main/braches/main
http get https://api.github.com/repos/Chethan-L701/nvim/main/branches
http get https://api.github.com/repos/Chethan-L701/nvim/main/branches/main
http get https://api.github.com/repos/Chethan-L701/nvim/main/branches/master
http get https://api.github.com/repos/Chethan-L701/nvim/main/branches/
http get https://api.github.com/repos/Chethan-L701/nvim/branches
http get https://api.github.com/repos/Chethan-L701/nvim/branches/main
http get https://api.github.com/repos/Chethan-L701/nvim/branches/main
http get https://api.github.com/repos/Chethan-L701/nvim/branches/main/init.lua
http get https://api.github.com/repos/Chethan-L701/nvim/branches/main/
http get https://api.github.com/repos/Chethan-L701/nvim/branches/main
exit
cmd
mkdir src
mkdir -p src/rust
mkdir -r src/rust
mkdir.exe -p src/rust
tree /f
nvim $env.nu_config
nvim $env.nu_config
cd scripts\src\rust\
cd scripts\
mkdir nu
mkdir bin
tree /f
git init
nvim .gitignore
git add .gitignore
status
nvim .gitignore
status
status
git add .gitignore
status
rustup upgrade
cargo new template
cd template\
status
status
git add src
status
cd ..\nu
cd ..
cd .
cd ..
cd nu\
mkdir user
cd user\
touch mod.nu
pwd
pwd | split row '\'
pwd | split row '\'
pwd | split row '\' | save demo.txt
echo "Card   1: 33 13 28 76 16 91 52 41 38 64 | 52 10  7 61 12 70 84 38 16 40  5 49 33 11 31 43 71 28 72 23 98 47 14 44 90" | split row : | get 1
echo "Card   1: 33 13 28 76 16 91 52 41 38 64 | 52 10  7 61 12 70 84 38 16 40  5 49 33 11 31 43 71 28 72 23 98 47 14 44 90" | split row : | get 1 | split row "|"
[] | append 10
mut b = [] | append 10
b \
b 
$b
$b | append 20
echo "Card   1: 33 13 28 76 16 91 52 41 38 64 | 52 10  7 61 12 70 84 38 16 40  5 49 33 11 31 43 71 28 72 23 98 47 14 44 90" | split row : | get 1 | split row "|" | each { |it| ^echo $it }
echo "Card   1: 33 13 28 76 16 91 52 41 38 64 | 52 10  7 61 12 70 84 38 16 40  5 49 33 11 31 43 71 28 72 23 98 47 14 44 90" | split row : | get 1 | split row "|" | reduce { |it, acc| ^echo $it }
echo "Card   1: 33 13 28 76 16 91 52 41 38 64 | 52 10  7 61 12 70 84 38 16 40  5 49 33 11 31 43 71 28 72 23 98 47 14 44 90" | split row : | get 1 | split row "|" | reduce { |it, acc| $acc += $it }
echo "Card   1: 33 13 28 76 16 91 52 41 38 64 | 52 10  7 61 12 70 84 38 16 40  5 49 33 11 31 43 71 28 72 23 98 47 14 44 90" | split row : | get 1 | split row "|" | reduce { |it, acc| mut $acc += $it }
echo "Card   1: 33 13 28 76 16 91 52 41 38 64 | 52 10  7 61 12 70 84 38 16 40  5 49 33 11 31 43 71 28 72 23 98 47 14 44 90" | split row : | get 1 | split row "|" | reduce { |it, acc| mut $acc = $acc + $it }
echo "Card   1: 33 13 28 76 16 91 52 41 38 64 | 52 10  7 61 12 70 84 38 16 40  5 49 33 11 31 43 71 28 72 23 98 47 14 44 90" | split row : | get 1 | split row "|" | reduce { |it, acc| mut $acc = $acc + $it }
echo "Card   1: 33 13 28 76 16 91 52 41 38 64 | 52 10  7 61 12 70 84 38 16 40  5 49 33 11 31 43 71 28 72 23 98 47 14 44 90" | split row : | get 1 | split row "|" | reduce { |it, acc| $acc + $it } 
echo "Card   1: 33 13 28 76 16 91 52 41 38 64 | 52 10  7 61 12 70 84 38 16 40  5 49 33 11 31 43 71 28 72 23 98 47 14 44 90" | split row : | get 1 | split row "|" | reduce { |it, acc| $acc + ($it | into int ) } 
echo "Card   1: 33 13 28 76 16 91 52 41 38 64 | 52 10  7 61 12 70 84 38 16 40  5 49 33 11 31 43 71 28 72 23 98 47 14 44 90" | split row : | get 1 | split row "|" | split row " " | reduce { |it, acc| $acc + ($it | into int ) }
echo "Card   1: 33 13 28 76 16 91 52 41 38 64 | 52 10  7 61 12 70 84 38 16 40  5 49 33 11 31 43 71 28 72 23 98 47 14 44 90" | split row : | get 1 | split row "|" | split row " " | reduce { |it, acc: int| $acc + ($it | into int ) }
echo "Card   1: 33 13 28 76 16 91 52 41 38 64 | 52 10  7 61 12 70 84 38 16 40  5 49 33 11 31 43 71 28 72 23 98 47 14 44 90" | split row : | get 1 | split row "|" | split row " " | reduce { |it, acc|  ($it | into int ) + $acc}
echo "Card   1: 33 13 28 76 16 91 52 41 38 64 | 52 10  7 61 12 70 84 38 16 40  5 49 33 11 31 43 71 28 72 23 98 47 14 44 90" | split row : | get 1 | split row "|" | split row " " | reduce { |it, acc|  ($it | into int ) + ($acc | into int)}
echo "Card   1: 33 13 28 76 16 91 52 41 38 64 | 52 10  7 61 12 70 84 38 16 40  5 49 33 11 31 43 71 28 72 23 98 47 14 44 90" | split row : | get 1 | split row "|" | split row " " | reduce { |it, acc|  ($it | into int )}
echo "Card   1: 33 13 28 76 16 91 52 41 38 64 | 52 10  7 61 12 70 84 38 16 40  5 49 33 11 31 43 71 28 72 23 98 47 14 44 90" | split row : | get 1 | split row "|" | split row " " | each { |it|  ($it | str trim }
echo "Card   1: 33 13 28 76 16 91 52 41 38 64 | 52 10  7 61 12 70 84 38 16 40  5 49 33 11 31 43 71 28 72 23 98 47 14 44 90" | split row : | get 1 | split row "|" | split row " " | each { |it|  ($it | str trim) }
echo "Card   1: 33 13 28 76 16 91 52 41 38 64 | 52 10  7 61 12 70 84 38 16 40  5 49 33 11 31 43 71 28 72 23 98 47 14 44 90" | split row : | get 1 | split row "|" | split row " " | each { |it|  ($it | str trim ) } 
echo "Card   1: 33 13 28 76 16 91 52 41 38 64 | 52 10  7 61 12 70 84 38 16 40  5 49 33 11 31 43 71 28 72 23 98 47 14 44 90" | split row : | get 1 | split row "|" | split row " " | each { |it|  ($it | str trim | where (get 2) != "" ) }
echo "Card   1: 33 13 28 76 16 91 52 41 38 64 | 52 10  7 61 12 70 84 38 16 40  5 49 33 11 31 43 71 28 72 23 98 47 14 44 90" | split row : | get 1 | split row "|" | split row " " | each { |it|  ($it | str trim | filter { |it| ($it | length) > 0} }
echo "Card   1: 33 13 28 76 16 91 52 41 38 64 | 52 10  7 61 12 70 84 38 16 40  5 49 33 11 31 43 71 28 72 23 98 47 14 44 90" | split row : | get 1 | split row "|" | split row " " | each { |it|  ($it | str trim | filter { |it| ($it | length) > 0} } | echo
echo "Card   1: 33 13 28 76 16 91 52 41 38 64 | 52 10  7 61 12 70 84 38 16 40  5 49 33 11 31 43 71 28 72 23 98 47 14 44 90" | split row : | get 1 | split row "|" | split row " " | each { |it|  ($it | str trim | filter { |it| ($it | length) > 0} } | echo 
echo "Card   1: 33 13 28 76 16 91 52 41 38 64 | 52 10  7 61 12 70 84 38 16 40  5 49 33 11 31 43 71 28 72 23 98 47 14 44 90" | split row : | get 1 | split row "|" | split row " " | each { |it|  ($it | str trim) } | filter { |it| ($it | length) > 0 }
echo "Card   1: 33 13 28 76 16 91 52 41 38 64 | 52 10  7 61 12 70 84 38 16 40  5 49 33 11 31 43 71 28 72 23 98 47 14 44 90" | split row : | get 1 | split row "|" | split row " " | each { |it|  ($it | str trim) } | filter { |it| $it != "" or $it != " " }
echo "Card   1: 33 13 28 76 16 91 52 41 38 64 | 52 10  7 61 12 70 84 38 16 40  5 49 33 11 31 43 71 28 72 23 98 47 14 44 90" | split row : | get 1 | split row "|" | split row " " | each { |it|  ($it | str trim) } | filter { |it| ($it != "" or $it != " ") }
echo "Card   1: 33 13 28 76 16 91 52 41 38 64 | 52 10  7 61 12 70 84 38 16 40  5 49 33 11 31 43 71 28 72 23 98 47 14 44 90" | split row : | get 1 | split row "|" | split row " " | each { |it|  ($it | str trim) } | filter { |it| $it == "40"}
echo "Card   1: 33 13 28 76 16 91 52 41 38 64 | 52 10  7 61 12 70 84 38 16 40  5 49 33 11 31 43 71 28 72 23 98 47 14 44 90" | split row : | get 1 | split row "|" | split row " " | each { |it|  ($it | str trim) } | filter { |it| $it != " "}
echo "Card   1: 33 13 28 76 16 91 52 41 38 64 | 52 10  7 61 12 70 84 38 16 40  5 49 33 11 31 43 71 28 72 23 98 47 14 44 90" | split row : | get 1 | split row "|" | split row " " | each { |it|  ($it | str trim) } | filter { |it| $it != ""}
echo "Card   1: 33 13 28 76 16 91 52 41 38 64 | 52 10  7 61 12 70 84 38 16 40  5 49 33 11 31 43 71 28 72 23 98 47 14 44 90" | split row : | get 1 | split row "|" | split row " " | each { |it|  ($it | str trim) } | filter { |it| $it != ""}
cd scripts\nu\user\
nvim demo.json
open demo.json
open demo.json | get SGPA
open demo.json | get name
nvim $env.STARSHIP_CONFIG
c;ear
nvim $env.STARSHIP_CONFIG
code .
use user
cd ..
use user
use user
use user/template
use user/ template
template 
use user
use user/ lang
lang template 
use user/ lang
use user/ template
template 
template c++ 
template c++ 
use user/ template
template c++ 
touch ~\.config\nu\templates.json
use user/ template
template c++ 
template c++ 
use user/ template
template c++ 
cd .config\nu\
template c++ 
template c++ 
use user/ template
template c++ 
use user/ template
template c++ 
use user/ template
template c++ 
use user/ template
template c++ 
use user/ template
template c++ 
template c++ 
mkdir fuck/hi
cd fuck\
mkdir fuck/hello
cd fuck\
rm -rf fuck
cd fuck\
$env.Path
$env.Path | append "~/scripts/nu/"
$env.Path | remove "~/scripts/nu/"
cd ..
$env.Path
$env.Path | append "C:\Users\Cheth\scripts\nu"
$env.Path | append "C:\\Users\\Cheth\\scripts\\nu"
cd ..
cd Workspace\C++\
use user/ template
$env.Path | append "C:\\Users\\Cheth\\scripts\\nu"
use user/ template
use user/ template
use nu/user/ template
$nu.default-config-dir
$nu.env-path
$nu.temp-path
$nu
nvim $env.nu_config
mv scripts\nu\user $nu.default-config-dir\user
mv scripts\nu\user $nu.default-config-dir 
cd $nu.default-config-dir
ter
use user/ template
code $nu.config-path
use AppData\Roaming\nushell\user
use AppData\Roaming\nushell\user\ template
alias modules = $nu.config-path
alias modules = ($nu.config-path | into string )
cdlear
$env.NU_LIB_DIRS
mv $nu.config-path\user ~\script\nu
mv ($nu.config-path | path join user ) ~\script\nu
code $nu.config-path
code $nu.env-path
$env.NU_LIB_DIRS
$env.NU_LIB_DIRS
code $nu.env-path
$env.NU_LIB_DIRS
code $nu.env-path
$env.NU_LIB_DIRS
code $nu.env-path
$env.NU_LIB_DIRS
$env.NU_LIB_DIRS | append ~/scripts/nu
$env.NU_LIB_DIRS | get 1
$env.NU_LIB_DIRS | get $1
$env.NU_LIB_DIRS.2
$env.NU_LIB_DIRS.1
$env.NU_LIB_DIRS.0
$env.NU_LIB_DIRS
$env.NU_LIB_DIRS = $env.NU_LIB_DIRS | append ~/scripts/nu
$env.NU_LIB_DIRS = $env.NU_LIB_DIRS | add ~/scripts/nu
use dirs
$env.NU_LIB_DIRS
mkdir $env.NU_LIB_DIRS.0
use user/ template
template c++ 
template c++ 
cd $env.NU_LIB_DIRS
cd $env.NU_LIB_DIRS.0
code .
use user/ template
template c++ 
template c++ hello
cd Workspace\C++\
use user/ template
template c++ hello
rm build include src
rm -rf build include src
cd .config\nu\
use user/ template
template c++ hello
cd hello\
cd ..
rm -rf hello
use user/ template
template create c++ hello
tree /f
rm -rf hello
use user/ template
template create c++ hello
use user/ template
template create c++ hello
cd hello\
tree /f
cd ..
cd hello\
tree /f
cd ..
rm -rf hello
template create c++ hello -g
rm -rf hello
template create c++ hello -g
cd hello\
tree /f
ls -a
cd ..
ll
cd hello
cd ..
use user/ template
rm -rf hello
template create c++ hello -g
cd hello
cd ..
rm -rf hello
let cmd = ["echo \"hi\""]
cmd
$cmd
$cmd.0
nu $cmd.0
exec $cmd.0
nu | help
la
ler
^$"echo hi"
^$"echo"
let cmd = ["echo \"hi\""]
^$"($cmd)"
echo "hi"
^$"($cmd)"
^$"($cmd.0)"
$cmd.0
^$cmd.0
let cmd = [echo hi]
$cmd.0
let cmd = ['echo hi']
$cmd.0
echo hi
^$cmd.0
nu -c $cmd.0
exit
nu -c "echo \"hi\""
cd Workspace\C++\
use user/ template
template create c++ hello -g
open ~\.config\nu\templates.json 
open ~\.config\nu\templates.json | get c++
open ~\.config\nu\templates.json | get c++ | get hi
template create node hello -g
use user/ template
rm -rf hello
use user/ template
template create node hello -g
cd hello
cd ..
rm -rf hello
template create node hello -g
rm -rf hello
use user/ template
template create node hello -g
cd hello\
tree /f
cd ..
rm -rf hello
template create node hello -g
cd hello\
tree /f
node
node src\index.js
:q
cd ..
rm -rf hello
ps | sort-by mem | reverse
ps | sort-by mem | reverse | where name == nvim
rm -rf hello
ps | sort-by mem | reverse | where name == node
rm -rf hello
btop
rm -rf hello
template create ts hello -g
tsc --init
rm tsconfig.json
rm -rf hello
template create ts hello -g
cd hello\
tree /f
cd ..
rm -rf hello
template create ts hello -g
cleaer
cd hello\
tree /f
tsc
tsc
tree /f
tsc
node out\index.js
tsc
node out\index.js
tree /f
tsc
tree /f
tsc
tree /f
tsc
tree /f
node out\index.js
nvim templates.json
cd Workspace\C++\
use user/ template
template create c++ day3
cd day3\
cd Workspace\C++\AdventOfCode2023\include\
nvim essencials.hpp
cd Workspace\C++\
cd misc\
cd build\
cmake -G Ninja ..
.\day5.exe
.\day5.exe
.\day5.exe
.\day5.exe
pwd
.\day5.exe
cd Workspace\C++\
cd ranges-and-views\
:q
cd ..
rm -rf ranges-and-views
template create c++ ranges
use user/ template
template create c++ ranges
cd ranges\
cd build\
cmake -G Ninja ..
cmake -G Ninja ..
.\ranges.exe
cmake -G Ninja ..
.\ranges.exe
.\ranges.exe
.\ranges.exe
.\ranges.exe
.\ranges.exe
.\ranges.exe
.\ranges.exe
ninja;.\ranges.exe
ninja;.\ranges.exe
ninja;.\ranges.exe
ninja;.\ranges.exe
ninja;.\ranges.exe
ninja;.\ranges.exe
cleat
ninja;.\ranges.exe
ninja;.\ranges.exe
ninja;.\ranges.exe
ninja;.\ranges.exe
ninja;.\ranges.exe
cd Workspace\C++\
cd ranges\
ninja;.\ranges.exe
cd build\
ninja;.\ranges.exe
ninja;.\ranges.exe
ninja;.\ranges.exe
ninja;.\ranges.exe
ninja;.\ranges.exe
ninja;.\ranges.exe
ninja;.\ranges.exe
ninja;.\ranges.exe
cd Workspace\C++\
use user/ template
template create c++ ranges
rm -rf hello day3
rm -rf hello 
rm -rf hello 
rm -rf day3
cd AOCmisc\
rm -rf *
template create c++ day6
cd day6\
cd build\
cmake -G Ninja ..
.\day6.exe
.\day6.exe
cd ..
cd ranges\
cd ..
cd AOCmisc\day6\
cd build\
.\day6.exe
.\day6.exe
.\day6.exe
.\day6.exe
.\day6.exe
.\day6.exe
.\day6.exe
.\day6.exe
.\day6.exe
.\day6.exe
.\day6.exe
claer
.\day6.exe
.\day6.exe
.\day6.exe
.\day6.exe
.\day6.exe
.\day6.exe
.\day6.exe
cd build\
.\day6.exe
.\day6.exe
.\day6.exe
.\day6.exe
cd ..
template create c++ day3
cd day3\
cd Workspace\C++\AOCmisc\day6\
cd build\
cmake -G Ninja ..
pwd
.\day3.exe
cd AppData\Local\nvim\
cd AppData\Local\nvim\
cd Workspace\Rust\
cargo new AOC
cd AOC\
rm -rf *
cd ..
rm AOC\
rm -rf AOC\
cargo new aoc
cd aoc\
carg run
cargo run
mommy
cargo run
cargo run
cargo run
echo "1abc2
<\n>pqr3stu8vwx
<\n>a1b2c3d4e5f
<\n>treb7uchet" | save input.txt
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
i
cargo run
cargo run
cargo run
cargo run
cargo
cargo run
cargo run
cargo run
cargo run
cargo run
winget upgrade
sfc.exe
sfc.exe
sfc.exe /SCANNOW
winget upgrade
winget upgrade Spotify
winget upgrade Spicetify --force
spicetify upgrade
spicetify apply
spicetify re
spicetify restore backup apply
spicetify backup apply
spicetify auto --transparent-window-controls
winget upgrade CMake
winget upgrade
winget upgrade kdenlive
cd Workspace\Rust\aoc\nvim
cd Workspace\Rust\aoc\
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
i
cargo run
cargo run
i
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
load-env {RUST_BACKTRACE:1}
cargo run
Time:        46     80     78     66
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cd AppData\Local\nvim\
status
nvim .gitignore
status
status
mv *.txt res/
tree /f
cargo run
cargo run
status
git add .
gh repo create AOC-rust --public
git remote add origin git@github.com:Chethan-L701/AOC-rust.git
git commit -m "day - 1, 2, 4, 6"
git push origin main
git branch -m main
git push origin main
winget upgrade
cd Workspace\Rust\aoc\
cleaer
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cd Workspace\Rust\aoc\
cargo run
cd Workspace\Rust\aoc\
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
status
git add src\main.rs src\day4\mod.rs
git commit -m "fixed a problem in day4"
git pu
git push origin main
git add src\main.rs src\day4\mod.rs
git commit -m "code cleanup"
git push origin main
cargo run
cargo run
cargo run
cargo run
cargo run
rg
ls | rg script
ls | rg script
ls | rg script | wc -l
ls | rg script | wc
ls | rg script | wc -1
ls | rg script | wc -l
cd Workspace\Rust\
touch demo,rs
mv demo,rs demo.rs
cargo demo.rs
nvim demo.rs
rm demo.rs
cargo new demo
cd demo
cleear
cargo run
cd demo
cd Workspace\Rust\demo
cleat
cd Workspace\Rust\demo
nvim --help
nvim --noplugins
nvim --startuptime
nvim --help
nvim --startuptime ./time.txt
rm time.txt
nvim 
cd ../..
cd C++\
cd AOCmisc\
cd ..
winget upgrade
uptime.exe 
winget upgrade nu
winget upgrade
winget upgrade gh
winget upgrade
winget upgrade kdenlive gimp
winget upgrade kdenlive
winget upgrade gimp
winget upgrade GIMP
winget upgrade
gimp
winget
winget upgrade
winget upgrade obs
winget upgrade obs studio
winget upgrade XPFFH613W8V6LV
whoami
cal
cal
cal | get sunday
cal | get wedsdar
cal | get wedsday
cal | get wednesday
cal | get wednesday
history | rg code
history | rg ^code
history | rg -G "^code"
cleaer
rg -h
rg -h | rg regex
history | rg -e "^code"
history | rg -e "code"
history | rg -e "code$"
rg -h | rg regex
cd Workspace\Rust\demo
cat .\src\main.rs | rg main
cat .\src\main.rs
open src\main.rs 
open src\main.rs  | rg main
open src\main.rs  | rg main
ls | rg script | wc -l
ls | rg main | wc -l
open src\main.rs | rg main | wc -l
open src\main.rs | rg main 
open src\main.rs ;rg main
rg maibn
rg main
cleat
cleaer
rg main
rg -e "^main"
rg -e "^#include"
rg -e "^#include" | wc -l
scoop update
scoop status
scoop update openssl
cd Workspace\
mkdir CN
cd CN\
git clone https://github.com/mdhn18/Site_to_site_VPN_on_Packet_Tracer.git
cd Workspace\CN
cd Site_to_site_VPN_on_Packet_Tracer\
cd Workspace\Rust\demo\
cargo run
cd Workspace\CN
car
cargo run
cd ..
cargo new quadratic_eq
cd quadratic_eq\
cargo run
CLEAR
cd ..
cargo new palindrome
cd palindrome\
cargo run
:
cd AppData\Local\nvim\
nivm
status
git diff
nivm
rm -rf .cache\
rm -rfv .cache\
cd AppData\Roaming\
cd ..
cd Local\
cd `Riot Games\`
cd `Riot Client\`
cd Logs\
explorer.exe 
cd `C:\Riot Games\`
cd `Riot Client\`
du
cd `C:\Riot Games\`
du
cd backend\
cleaer
npm run dev
66777b66
cd Workspace\Rust\
cd aoc\
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
:q
cargo run
cd Workspace\Rust\aoc\
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
cd AppData\Local\nvim\
status
git add .
git diff
git commit -m "schedelued revision - 1"
git push origin main
cd Workspace\Rust\
cd nvim
cd adder\
bc
cd Workspace\C++
cd misc\
meta.cpp
touch meta.cpp
clang-format -style=llvm -dump-config | save .clang-format
cd $env.NU_LIB_DIRS
cd AppData\Roaming\nushell\
tree /f
git int
git init
gh repo create nushell-conf --public
git remote add origin git@github.com:Chethan-L701/nushell-conf.git
git add .
git commit -m "new repo for nushell config files and scripts"
git branch -m main
git push origin main
.
source env.nu
source env.nu
vi
source env.nu
source config.nu
config
clang-format-llvm
open clang-format-llvm
cd AppData\Roaming\nushell\
git status
code .
use user/ template
template create c++ day3 --config
rm -rfv day3
use user/ template
template create c++ day3 --config
use user/ template
template create c++ day3 --config
template create c++ day3 --config
rm -rfv day3
use user/ template
template create c++ day3 --config
rm -rfv day3
use user/ template
template create c++ day3 --config
use user/ template
template create c++ day3 --config
template create c++ day3 --config
rm -rfv day3
use user/ template
template create c++ day3 --config
use user/ template
template create c++ day3 --config
use user/ template
template create c++ day3 --config
use user/ template
template create c++ day3 --config
use user/ template
template create c++ day3 --config
rm -rfv day3
use user/ template
template create c++ day3 --config
use user/ template
template create c++ day3 --config
template create c++ day3
rm -rfv day3
template create c++ day3
use user/ template
template create c++ day3
use user/ template
template create c++ day3
template create ts hello -g -c
template create node hello -g -c
cd hello\
tree /f
cd ..
rm -rfv day3 hello
status
git add .
git commit -m "new config flag and made fields post-commands and pre-command optional in the template.json file"
git push origin main
tree /f
status
diff
git diff
nvim .gitignore
git status
git status
git diff .gitignore
vi
cd AppData\Roaming\nushell\
open history.txt
open history.txt | rg -r
open history.txt | rg -r "*"
open history.txt | rg -r a
open history.txt | rg -e code
open history.txt | rg -e ^code
open history.txt | rg -e "(code + nvim)"
open history.txt | rg -e "[code + nvim]"
open history.txt | rg -e "[code] + [nvim]"
open history.txt | rg -e "(nvim)"
open history.txt | rg -e "(nvim, code)"
open history.txt | rg -e "(nvim | code)"
open history.txt | rg -e "(nvim | code){2}"
rg -e "(.*)"
rg -e "(.)*"
ripgrep
cat */*
cat **/*
scoop update
scoop status
scoop install gnutls
scoop install extras/gnutls
cd Workspace\C++\misc\
exit
cd AppData\Local\nvim\
:qvi
vi
cd Workspace\
mkdir Angular
cd Angular\
npm i -g @angular/cli
ng new hello_world
cd hello_world\
code .
npx start
wsl --help
wsl -d --install
wsl -d 
wsl --install
wsl --update
wsl
wsl --list --nline
wsl --list --online
wsl --list
go
go install gopls@latest
winget install go
winget install GoLang.Go
Postgres
postgres
cd `C:\Program Files\`
cd PostgreSQL\
cd 16
cd bin\
postgres
creatdb
pg_config.exe
postgres
creatdb
createdb
createdb db1
claer
createdb db1
psql.exe -U postgres
createdb db1 -d postgres
createdb db1
psql -U postgres
createdb db1
psql -U postgres
dropdb db1
createdb db1
mv Downloads\SOCR-HeightWeight.csv .
nvim SOCR-HeightWeight.csv
psql db1
psql db1 -U postgres
psql -U postgres
psql db1
psql -U postgres
nvim SOCR-HeightWeight.csv
psql db1
nvim SOCR-HeightWeight.csv
go
wsl --list --online
cd Workspace\Rust\
cd demo\
net start postgressql
net start postgresql
pg_ctl.exe 
pg_ctl.exe RESTART
pg_ctl.exe restart
pg_ctl.exe restart `C:\Program Files\PostgreSQL\`
cd restart `C:\Program Files\PostgreSQL\`
cd `C:\Program Files\PostgreSQL\`
cd 16
cd data\
pg_ctl restart .
pg_ctl restart -d .
pg_ctl restart -D .
psql db1
pg_ctl stop
pg_ctl stop -D `C:\Program Files\PostgreSQL\16\data\`
psql
psql db1
cd Workspace\Rust\
cargo new postgres_demo
cd postgres_demo\
cargo add postgres
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
mv ~\SOCR-HeightWeight.csv ./res/
tree /f
.\res\
mkdir res
mv res hw.csv
mkdir res
mv hw.csv .\res\
cargo run
cd Workspace\Rust\
cd postgres_demo\
cargo run
cargo run
cargo run
cd Workspace\Angular\ls
cd Workspace\Angular\
cd hello_world\
code .
fzf
history | rg -e "frontend"
npm create vite@latest frontend
cd frontend\
npm run dev
npm install
cd Workspace\Airbus\
cd backend\
npm init -y
history | rg -e "express"
npm i nodemon express
cd Workspace\Airbus\backend\
npm i cors
cd backend\
npm i pg-promise
cd Workspace\Rust\postgres_demo\
npm run dev
cd backend\
npm install pg
npm run dev
node index.js
node index.js
node index.js
cd backend\
node index.js
node index.js
node index.js
client.query(`insert into jsdemo (name, age) values ($1, $2);`, ['deepak', 20]).then(() => {console.log("data entered succesfully!")}).catch((e)=>{console.error(e)});
node index.js
cd Workspace\Rust\postgres_demo\
cdlear
cd Workspace\Airbus\
cd frontend\
cd Workspace\Airbus\frontend\
cd frontend\
npm install axios
cd Workspace\Airbus\frontend\
cd ..
cd backend\
node index.js
cd Workspace\Airbus\frontend\
cd ..
cd frontend\
rg cors
cd Workspace\Airbus\frontend\
npm install cors
npm run dev
createdb students
node index.js
node index.js
cd Workspace\Rust\postgres_demo\
cargo run
cargo run
node index.js
cd Workspace\Airbus\frontend\
npm install react-router-dom
cd frontend\
cd Workspace\Airbus\frontend\
net start postgresql-x64
net start postgresql-x64-16
cd Workspace\Rust\
cargo theading
cargo new theading
rm -rfv theading\
rm -rfv threading\
cargo new threading
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
.\grep.exe hi
ls | .
ls | .\grep.exe to
powershell.exe 
gchi
mysc gchi
mingw
gchi
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
rm grep.exc grep.exe
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
rm grep.exc grep.exe
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
rm grep.exc grep.exe
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
wsl --list --online
wsl --install -d ubuntu
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
rm grep.exc grep.exe
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
rm grep.exc grep.exe
cd Workspace\Rust\
cd threading\
cargo run
cargo run
cargo run
lazygit
nvim demo.cpp
rm -v demo.*
cd Workspace\C++\
cd AOCmisc\
cd ..
cd calculate\
rm -rfv .vs out
rm CMakePresets.json
mkdir build
mkdir srcc
mv srcc src
mv calculate.cpp .\src\
cd build\
cmake -G Ninja ..
cd ..
cd build\
cmake -G Ninja ..
cd ..
cd AOCmisc\
cd ..
cd calculate\
cd build\
cmake -G Ninja ..
.\calculate.exe
cmake -G Ninja ..
cd Workspace\Rust\
cargo new cubes
cd cubes\
cargo run
cargo run
cmake -G Ninja ..
.\calculate.exe
.\calculate.exe
.\calculate.exe
.\calculate.exe
.\calculate.exe
.\calculate.exe
.\calculate.exe
.\calculate.exe
.\calculate.exe
oy
ssh
cd /
wsl
rustup upgrade
wsl --install -d ubuntu
wsl
wsl --install -d ubuntu
wsl --update
wsl --install -d ubuntu
wsl --uninstall -d ubuntu
wsl --help
wsl --unregister -d ubuntu
wsl --unregister 
bash
wsl --update
wsl
http get https://api.github.com/repos/Chethan-L701/nvim/branches/main
sccop update
scoop update
scoop status
sccop update openssl
scoop update openssl
cd AppData\Local\nvim\
cd AppData\Local\nvim\
claer
elixirc.bat 
elixirc
iex
scoop update
scoop update openssl
scoop status
scoop update cacert
cacert --help
ENIT
EXIT
exit
nu
cd AppData\Local\nvim\
git branch
git branch refactor
git checkout refacot
git checkout refactor
status
git diff
code .
git checkout main
diff
git diff
git checkout main
git checkout refactor
git checkout main
git checkout refactor
git add .
git stash
git checkout main
status
code .
status
rm lua\themes\init.lua
cleat
status
git diff
status
git diff
git checkout refactor
code .
git stash apply
git stash apply -force
git stash apply -f
git stash apply
git restore lua\plugins.lua
git stash apply
cllear
code .
cd AppData\Local\nvim\
cd AppData\Local\nvim\
cd ..
cd Local\nvim-data\
rm -rfv tree-sitter-*
rm -rfv "tree-sitter-*"
rm -rfv "tree-sitter-*"
rm -rfv "tree-sitter-*"
cd AppData\Local\nvim\
git config --global http.version HTTP/2
cd AppData\Local\nvim\
rm grep.exc grep.exe
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
rm grep.exc grep.exe
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
rm grep.exc grep.exe
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
rm grep.exc grep.exe
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
rm grep.exc grep.exe
cd AppData\Local\nvim-data\
rm grep.exc grep.exe
rm -rfv "tree-sitter-*"
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
rm grep.exc grep.exe
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
rm grep.exc grep.exe
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
rm grep.exc grep.exe
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
rm grep.exc grep.exe
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
rm grep.exc grep.exe
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
rm grep.exc grep.exe
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
rm grep.exc grep.exe
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
rm grep.exc grep.exe
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
rm grep.exc grep.exe
cd Workspace\Rust\
cd postgres_demo\
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
rm grep.exc grep.exe
curl -L https://www.google.com | save google.html
nvim google.html
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
rm grep.exc grep.exe
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
rm grep.exc grep.exe
curl --
curl -v
curl --version
winget install curl
winget install cURL.cURL
curl --version
cd ~
cd Downloads\curl-8.5.0_3-win64-mingw\
cd curl-8.5.0_3-win64-mingw\
cd bin\
cls
.\curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
which curl
mv .\curl.exe ~\misc\
cs
.\misc\
whip curl
which curl
scoop install curl
which curl
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
rm grep.exc grep.exe
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
rm grep.exc grep.exe
grep --version
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
grep --version
scoop install grep
cd AppData\Local\nvim-data\
rm -rfv "tree-sitter-*"
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
rm grep.exc grep.exe
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
rm grep.exc grep.exe
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
rm grep.exc grep.exe
git config --global http.version HTTP/1.1
cd AppData\Local\nvim-data\
rm -rfv "tree-sitter-*"
rm -rfv "tree-sitter-*"
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
rm grep.exe
git config --global http.postBuffer 524288000
git config --global http.version HTTP/2
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
rm grep.exe
git config --global http.version HTTP/1.1
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
rm grep.exe
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
rm grep.exe
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
rm grep.exe
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
rm grep.exe
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
cd Workspace\C++\AOCmisc\day6\
cd AppData\Local\nvim
cd ~/AppData\Local\nvim
cd ~\Workspace\Rust\
cd aoc\
cd ~/AppData\Local\nvim
status
git add .
git commit -m "refactored the themes"
git stash drop
cd ~/AppData\Local\nvim
cd ~\Workspace\Rust\aoc\
cd AppData\Local\nvim
nvmi
ls | awk -F'|' '{print $1}'
ls | awk -F'\n' '{print $1}'
la
cd res
cat day.txt
cat day1.txt
cat day2.txt
cat | awk -F':' '{ print $1 }'
cat | awk -F':' '{ echo $1 }'
cat day1.txt | awk -F':' '{ echo $1 }'
cat day1.txt | awk -F'\n' '{ echo $1 }'
vi
tree-sitter
npm i -g tree-sitter
npm i -g tree-sitter-cli
npm i -g tree-sitter
cd ..
scannow
cd AppData\Local\nvim
git push origin refactor
git status
git diff
ping 8.8.8.8
cd AppData\Local\nvim
50 * 1024
50 * 1024 * 8
tree-sitter
curl -L https://raw.githubusercontent.com/mbuilov/grep-windows/master/grep-3.11-x64.exe | save grep.exe
cd AppData\Local\nvim
cd Workspace\misc\
py -m pip install pywhatkit
py -m pip install --upgrade pip
py -m pip install --upgrade
py -m pip install --upgrade *
py -m pip install --upgrade all
py script.py
nvim script.py
ping 8.8.8.8
ping 127.0.01
ping 0.0.0.0
ping 1.1.1.1
cd Workspace\misc\
ng new hello_world
cd hello_world\
code .
npm run dev
cd Workspace\
cd Angular\hello_world\
cd Workspace\Angular\hello_world\
cd Workspace\
rm -rfv Angular
cd Workspace\
git clone git@github.com:Chethan-L701/Angular-Lab.git
cd Angular-Lab\
touch .gitignore
touch README.md
git add .
got commit -m "init project"
git commit -m "init project"
git branch -m main
git commit -m "init project"
git commit --unset-upstream
git branch
git status
git branch --unset-upstream
git push origin main
cd ..
ng new calculator
cd calculator\
code .
cd Workspace\
mkdir demo
cd demo\
code .
node
node index.js
cd Workspace\
fzf
cd VSCode\
cd JavaScript\
cd user_database\
cd Workspace\demo\
cd Workspace\VSCode\JavaScript\user_database\
btop
node .\backend\index.js
createdb students
cd Workspace\VSCode\JavaScript\user_database\
cd frontend\
btop
cd AppData\Local\nvim
nvim demo.cpp
cd AppData\Local\nvim
celar
:(){:|:&}:
cd AppData\Local\nvim
nvim demo.cpp
cd AppData\Local\nvim
nvim demo.cpp
cd AppData\Local\nvim
cd Workspace\C++\misc\
cd ..
cd Rust\adder\
fzf
ls --all
ls --all -R
ls -R
ls -du
ls -d
cd .config\
cd starship\
nvim starship.toml
cd Workspace\Rust\
cd adder\
nvim .\.config\starship\starship.toml
cd .
cd ~\.config\starship\
cd Workspace\Rust\adder\
cd Workspace\Rust\adder\
nvim .\.config\starship\starship.toml
cd Workspace\Rust\adder\
nvim .\.config\starship\starship.toml
.
touch demo.c
rm demo.*
cd AppData\Local\nvim
cd AppData\Local\nvim
vi
cd AppData\Local\nvim
cd AppData\Local\nvim
cd Workspace\Rust\adder\
cd Workspace\Rust\adder\
cd ..\aoc\
cd Workspace\VSCode\JavaScript\user_database\
code .
cd backend\
cd frontend\
which nvim
scoop unistall nvim
scoop
scoop uninstall nvim
scoop uninstall neovim
cd AppData\Local\nvim
cd Workspace\Rust\aoc\
cd AppData\Local\nvim
cd Rust\adder\
cd Workspace\Rust\aoc\
cd AppData\Local\nvim
cd AppData\Local\nvim
nvim hello.ts
rm hello.ts
cd AppData\Local\nvim
nvim hello.ts
rm hello.ts
nvim --version
nvim hello.ts
rm hello.ts
cd AppData\Local\nvim
cd Workspace\Rust\aoc\
cd AppData\Local\nvim
cd Workspace\Rust\aoc\
cd AppData\Local\nvim
cd Workspace\Rust\aoc\
cd AppData\Local\nvim
cd Workspace\Rust\aoc\
cd AppData\Local\nvim
cd Workspace\Rust\aoc\
nvim hello.ts
cd AppData\Local\nvim
nvim hello.ts
rm hello.ts
nvim hello.ts
cd Workspace\C++\AOCmisc\
cd day3\
cd ..
cd day6\
rm hello.ts
git status
touch lua\plugins\treesitter\treesitter-text.lua
code
code .
code .
git status
tree /f
git status
git add .
cd AppData\Local\nvim
status
git add .
git commit -m "stage1 refactor completed"
git push origin main
man
scoop update
scoop install man
help
help git
git --help
cd AppData\Local\nvim
vim
cd AppData\Local\nvim
nivm
nvim .wezterm.lua
nvim .wezterm.lua
nvim .wezterm.lua
nvim .wezterm.lua
nvim .wezterm.lua
nvim .wezterm.lua
nvim .wezterm.lua
nvim .wezterm.lua
nvim .wezterm.lua
nvim .wezterm.lua
sl
sed
nvim .wezterm.lua
nvim .wezterm.lua
nvim .wezterm.lua
nvim .wezterm.lua
nvim .wezterm.lua
exit
nvim .wezterm.lua
scoop install lf
lf
nvim .wezterm.lua
nvim .wezterm.lua
nvim .wezterm.lua
cd AppData\Local\nvim
ncdu
ranger
lf
nvim .wezterm.lua
nvim .wezterm.lua
:q
nvim .wezterm.lua
nvim .wezterm.lua
nvim .wezterm.lua
nvim .wezterm.lua
cleaer
lf
s
cd AppData\Local\nvim
nvim .wezterm.lua
lf
nvim .wezterm.lua
luarocks
winget install lua
winget install --id DEVCOM.LuaJIT
luarocks
lua
luarocks
nvim .wezterm.lua
cd AppData\Local\nvim
fish
pueue kill
pueued -d
cd Workspace\C++\misc\
clang++ -o timeout timeout.cpp --std=c++23
.\timeout
clang++ -o timeout timeout.cpp --std=c++23
.\timeout
.\timeout
.\timeout 1
.\timeout 20
clang++ -o timeout timeout.cpp --std=c++23
.\timeout
.\timeout 5
.\timeout 10
clang++ -o timeout timeout.cpp --std=c++23
.\timeout 10
pueue .\timeout 10
pueue ".\timeout 10"
pueue add ".\timeout 10"
pueue status
history | to text 
history | to text | fzf
pueue clean
pueue status
pueue parallel 1000
pueue status
timeout.exe 1
timeout.exe 10
pueue add "timeout 10"
pueue status
pueue start 2
pueue status
pueue start 4
pueue status
pueue start 4
pueue status
pueue start 3
pueue status
pueue clean
pueue status
pueue add "timeout.exe 10"
pueue status
pueue start 0
pueue status
pueue restart 0
pueue status
pueue restart 0
pueue status
pueue clean
pueue status
pueue remove 1
pueue remove 2
pueue status
pueue add -- timeout.exe 10
pueue status
pueue start 0
pueue status
nvim .wezterm.lua
clwea
nvim .wezterm.lua
py -m pip install curses
py -m pip install ncurses
py
file
ssh 
cd Workspace\C++\misc\
nivm
cd Workspace\C++\misc\
cd AppData\Local\nvim
cd Workspace\C++\misc\
cd Workspace\C++\misc\
cd AppData\Local\nvim
git add .
git status
git diff
git diff .
git status
lazygit
git add .
git diff
git commit -m "fixed: treesitter-text-object"
git push origin main
git push origin refactor
.nvim
cd Workspace\Rust\aoc\
git diff
lazygit
cd AppData\Local\nvim
exit
winget upgrade
winget upgrade CMake
winget upgrade GIMP
winget upgrade 
winget upgrade HWiNFO
winget upgrade XPFFH613W8V6LV
winget upgrade obs
cd $env.NU_LIB_DIRS
cd $env.nu_config
cd AppData\Roaming\nushell\
cd AppData\Local\nvim
cd Workspace\Rust\aoc\
cd AppData\Local\nvim
cd AppData\Local\nvim
cd Workspace\Rust\aoc\
cd Workspace\Rust\
cargo run demo
cargo new demo
cargo new lsp_test
cd lsp_test\
cargo run
objdump
objdump -d .\target\debug\lsp_test.exe
objdump -d .\target\debug\lsp_test.exe | save .\asm
nvim asm
cd Workspace\C++\misc\
nvim text.nvim
clang++ -o add add.cpp --std=c++23
clang++ -o add add.cpp --std=c++23
clang++ -o add add.cpp --std=c++23
.\add
objdump -d add | save exp.asm
objdump -d add | append exp.asm
objdump -d add | save exp.asm -f
rm exp.asm
objdump
objdump -d add -S add.cpp | save exp.asm -f
objdump -marm
cd Workspace\C++\misc\
objdump -m arm -d add | append exp.asm
objdump -marm -d add | append exp.asm
objdump -M arm -d add | append exp.asm
cd AppData\Local\nvim
git diff
git diff
git diff
tree /f
:q
mklink C:\Users\Cheth\misc\godot.exe C:\Users\Cheth\GoDot\Godot_v4.2.1-stable_win64_console.exe
godot
which godot
godot .
godot.exe
cd GoDot\
.\Godot_v4.2.1-stable_win64_console.exe
cd Workspace\Neovim
mkdir.exe -p Workspace\Neovim
cd Workspace\Neovim
cd AppData\Local\nvim
cd AppData\Local\nvim
nivm
git status
git add .
git commit -m "file renaming"
git push origin refactor
which mix
cd Workspace\
mkdir Elixir
cd Elixir\
mix new hello_world
cd hello_world\
nvim .\.config\starship\starship.toml
nvim .\.config\starship\starship.toml
cd Workspace\Elixir\hello_world\
mix test
mix build
mix --help
mix help
mix clean
s
tree /f
mix compile
tree /f
mix help | rg run
mix run
mix run
iex
mix run -e "HelloWorld.hello()"
mix compile
mix run -e "HelloWorld"
mix run -e "HelloWorld.start()"
mix text
mix test
cd ..
cd ..
cd misc\
nivm demo.cpp
clang++ -E demo.cpp | save preproc_demo.cpp -f
nvim demo.cpp
firefox
cd Workspace\misc\
clang++ -o str_lit string_literals.cpp
clang++ -o str_lit string_literals.cpp --std=c++23
.\str_lit
fzf
nvim Workspace\C++\misc\compile_commands.json
fzf
 
mkdir git_demo
cd git_demo\
cd ..
rm git_demo\
use user/ template
template create c++ demo_git -g
cd demo_git\
cd Workspace\misc\demo_git\
tree /f
cd AppData\Local\nvim
cd Workspace\misc\demo_git\
py -m pip install cmake-language-server
cd Workspace\misc\demo_git\
cd build\
cmake -G Ninja ..
cd AppData\Local\nvim
cd Workspace\misc\demo_git\
cd build\
.\app.exe.exe
rm -rf v
cmake -G Ninja ..
rm -rf v
rm -rfv
rm -rfv .
rm -rfv ./
rm.exe -rfv ./
cmake -G Ninja ..
.\app.exe
cd AppData\Local\nvim
git status
git add .
git commit -m "new completion plugins for: signature and treesitter completion"
git push origin refactor
ranger
cd AppData\Local\nvim
code .
code .
cd AppData\Local\nvim
cleae
cd lua\
mv init.lua plugins.lua
mv init.lua lazy-plugin.lua
mv plugins.lua lazy-plugin.lua
code .
cd ..
code .
q
code .
mv .\lua\plugins\treesitter ~/misc/treesitter
cd misc\treesitter\
rm.exe -rfv ..\nvim-data
cd AppData\Local\nvim-data\
rm -rfv ./
rm -rfv *
cd ..\nvim\
git log
git checkout b7a747ce748dec260ccd5bb42b71a3460b57b872
git status
git checkout main
git checkout refactor
git status
cd ..
rm -rfv nvim
rm -rfv nvim
git clone git@github.com:Chethan-L701/nvim.git
cd nvim
git checkout refactor
git status
git add .
git commit -m "lazy-lock on main"
git checkout refactor
cd AppData\Local\nvim\
cd AppData\Local\nvim\
git add .
git commit -m "rename themes -> ui module"
git push origin refactor
git status
git add .
git commit -m "added plugins.git module"
git push origin refactor
btop
cd AppData\Local\nvim\
killall git
kill git
ps aux
ps 
ps | rg -E 
''
ps | rg -E "^git"
ps | rg -E "git"
ps | rg -e "git"
rg --help
rg --help 
rg --help | rg 
rg --help | rg regex
ps | rg -e 'git'
ps
cd AppData\Local\nvim\
git status
git add .
git commit -m "refactor part2 finish potential merge to main in future"
git push origin refactor
nvim .wezterm.lua
cd Workspace\misc\demo_git\
cd AppData\Local\nvim-data\
rm -rfv tree-sitter-cpp tree-sitter-perl
btop
rm -rfv tree-sitter-cpp tree-sitter-perl
git config --global http.postBuffer 1048576000
git config --global http.postBuffer 2048M
git config --global http.maxRequestBuffer 1024M
git config --global core.compression 9
git config --global --unset core.compression 9
git config --global --unset http.maxRequestBuffer
git config --global --unset http.postBuffer 2048M
git config --global --unset http.postBuffer
git config --global http.postBuffer
winget upgrade
winget install --id Git.GIt -e --source winget
winget install --id Git.Git -e --source winget
winget update
winget update Starship
winget update Opera.Opera
spicetify upgrade
spicetify apply
spicetify auto --transparent-window-controls
winget update
winget update
winget upgrade Spicetify --force
spicetify auto --transparent-window-controls
winget upgrade GIMP
winget upgrade Gimp
winget upgrade LuaJIT
winget upgrade Spotify
spicetify apply
spicetify auto --transparent-window-controls
spicetify backup apply
spicetify backup
cd AppData\Roaming\spicetify\
rm -rfv Backup
spicetify backup
spicetify apply
spicetify backup apply
spicetify auto --transparent-window-controls
winget upgrade
winget upgrade  obs
winget upgrade  obsstudio
sc delete vkg
sc
sc delete vks
sc delete vks
cd /
cd `Program Files\`
cd `Riot Vanguard\`
rm -rf vgk.sys
sc delete vgc
sc delete vgk
cd Workspace\C++
mkdir datastructures
rm datastructures\
use user/ template
template create c++ datastructures -g
cd datastructures\
cmake -G Ninja ..
cd ..
cmake -G Ninja .
rm -rf CMakeCache.txt CMakeFiles
cd build\
cmake -G Ninja .
rm -rf *
cmake -G Ninja ..
cd ..
git add .
git rm --cached session.nvim build
git rm --cached session.vim build
git rm -r  --cached session.vim build 
git add .clang-format
cd build\
cmake -G Ninja ..
.\ds.exe
cd AppData\Local\nvim\
cd Workspace\Rust\
cd adder\
cd Workspace\Rust\
cargo new function
rm -rf function
cargo new functional
cd functional\
nvim ~\.wezterm.lua
cd AppData\Local\nvim\
git dif
git diff
git add .
git commit -m "created separate file for vim options"
git push origin refactor
ip moniter
ip
scoop install ip
btop
btop
cd AppData\Local\nvim-data\
btop
which git
which curl
btop
cd Workspace\CN\
mkdir blowfish
cd blowfish\
git clone -depth=1 https://github.com/nishnash54/BlowfishEmailEncryption.git
git clone --depth=1 https://github.com/nishnash54/BlowfishEmailEncryption.git
cd BlowfishEmailEncryption\
py blowfish_algo.py
py algo.py
send.py
py send.py
py algo.py
py send.py
py algo.py
py send.py
py receive.py
py send.py
py receive.py
i
py receive.py
py send.py
py receive.py
cd Workspace\CN\blowfish\BlowfishEmailEncryption\
py receive.py
import imaplib
py
py receive.py
py send.py
py receive.py
py send.py
py receive.py
py send.py
py receive.py
py receive.py
py receive.py
py receive.py
py receive.py
py receive.py
py receive.py
py send.py
py receive.py
cd Workspace\CN\blowfish\BlowfishEmailEncryption\
rm -rf .git
rm -rfv README.md session.vim session.nvim __pycache__\
nvim .gitignore
git init
git branch -m main
git status
git add .
git commit -m "Created the project"
gh repo create email-encrypt-decrypt-using-blowfish --public
git remote add origin git@github.com:Chethan-L701/email-encrypt-decrypt-using-blowfish.git
git push
git push origin main
git clone https://github.com/Chethan-L701/email-encrypt-decrypt-using-blowfish.git
cd Workspace\CN\blowfish\BlowfishEmailEncryption\
py algo.py
cmd
rm -rfv email-encrypt-decrypt-using-blowfish
cd Workspace\CN\blowfish\BlowfishEmailEncryption\
git branch demo
git checkout demo
btop
history | to text | fzf
ps
ps1
nvim .\.config\starship\starship.toml
cd .config\starship\
git init
git branch -m main
git add .
touch .gitignore
nvim .gitignore
git status
git rm --cached session.vim
git rm -f --cached session.vim
git status
gh repo create starship-conf --public
git remote add origin git@github.com:Chethan-L701/starship-conf.git
git status
git commit -m "initial starship config file"
git push origin main
cd AppData\Local\nvim\
git sync
git pull origin main
git checkout main
git status
git stash 
cd AppData\Local\nvim\
git checkout main
cd ..
cd nvim
git rebase
git stash drop
git rebase
git status
git stash
git branch
git fetch
cd AppData\Local\nvim\
git fetch
tree /f
git status
git pull origin main
btop
git branch
git stash drop
git merge refactor
git status
git pull
git pull --rebase
git fetch --rebase
git fetch --rebase origin main
git rebase origin main
cd AppData\Local\
rm -rfv nvim
btop
rm -rfv nvim
git clone git@github.com:Chethan-L701/nvim.git
cd nvim
git fetch
cd AppData\Local\nvim\
git branch
git branch -u origin/main
git pull
git log
git log
git config --global user.email
git config --global user.name
cd Workspace\
mkdir git_demo
cd git_demo\
git init
touch .gitignore
touch README.md
ll
ls -a
git status
git status
git add .gitignore
git syns
status
nvim ~\.config\starship\starship.toml
source
st
cd Workspace\git_demo\
lcear
cd AppData\Local\nvim-data\
rm -rfv tree-sitter-*
btop
rm -rfv tree-sitter-*
cd Workspace\C++\
use user/ template
psql
createdb demodb
cd Workspace\
cd Angular-Lab\
cd ..
cd VSCode\
cd JavaScript\
cd user_database\
code .
cd Workspace\
mkdir demo-dbms
cd demo-dbms\
mkdir frontend backend
code .
cd backend\
npm init
touch index.js
npm install expressjs
npm install express
npm install nodemon
btop
node index.js
npm install cors
node index.js
cd backend\
npm install pg
cd frontend\
npm init
npm init -y
npx run http-server --cors
npm install https-server
https-server --cors
cd frontend\
npm install axios
curl -L https://www.google.com | save google.html
rm google.html
curl -L https://www.google.com | save google.html
https-server --cors
http-server --cors
cd Workspace\VSCode\JavaScript\user_database\
cd AppData\Local\nvim
git add .
git commit -m "removed cssmodule and tailwind lsp"
git push
lcear
cd AppData\Local\nvim
cd Workspace\C++\
cd misc\
clang++ -o  demo demo.cxx --std=c++23
.\demo
clang++ -o  demo demo.cxx --std=c++23
.\demo
cat demo.txt
clang++ -E demo.cxx --std=c++23 | save demo_pre.cpp
nvim demo.cxx
cd Workspace\C++\misc\
clang++ -o map map_demo.cpp --std=c++23
.\map
clang++ -o map map_demo.cpp --std=c++23
.\map
clang++ -o map map_demo.cpp --std=c++23
.\map
clang++ -o map map_demo.cpp --std=c++23
.\map
clang++ -o map map_demo.cpp --std=c++23
.\map
nvim map_demo.cpp
cd Workspace\
cd C++\
cd datastructures\
cd build\
git log
cmake -G Ninja ..
.\ds.exe
tmus
tmux
exit
exit
git status
cd ..
cd build\
.\ds.exe
.\ds.exe
cd Workspace\C++\datastructures\
cd build\
.\ds.exe
cd Workspace\C++\datastructures\
cd build\
.\ds.exe
.\ds.exe
.\ds.exe
.\ds.exe
.\ds.exe
cd Workspace\C++\datastructures\
cd build\
.\ds.exe
cd Workspace\C++\datastructures\
cd AppData\Local\nvim
cd Workspace\git_demo\
cd AppData\Local\nvim
cd AppData\Local\nvim
deno
cargo install deno --locked
rm -rf .\.cache
powershell.exe 
deno
scoop install deno
deno
cd AppData\Local\nvim
cd ..\nvim-data\
cd lazy\
la
rm -rf peek.nvim
cd ..
cd ..\nvim
cd AppData\Local\nvim
tsc
cd Workspace\Rust\
cargo new list
cd list\
nvim .wezterm.lua
cd Workspace\Rust\list\
exit
cargo run
clang++ -o demo.c
clang++ -o demo demo.c
.\demo
rm demo
clang++ -o demo demo.c
.\demo
clang++ -o demo demo.c
clang -o demo demo.c
.\demo
clang -o demo demo.c
.\demo
nvim demo.c
rm demo.c
ls | rg cpp
ls | rg c
ls | fzf
ls | rg 
ls | rg *
ls | rg *
ffplay
mkdir.exe -p  Workspace\DSA
cd Workspace\DSA
clang++ -o solution kth_largest.cpp
.\solution
clang++ -o solution kth_largest.cpp
.\solution
clang++ -o solution kth_largest.cpp
.\solution
clang++ -o solution kth_largest.cpp
.\solution
clang++ -o solution kth_largest.cpp
.\solution
clang++ -o solution kth_largest.cpp
.\solution
clang++ -o solution kth_largest.cpp
.\solution
clang++ -o solution word_puzzle.cpp
.\solution
clang++ -o solution word_puzzle.cpp
.\solution
clang++ -o demo demo.cpp
.\demo
clang++ -o demo demo.cpp
.\demo
clang++ -o demo demo.cpp:q
nvim demo.cpp
nvim demo.cpp
nvim demo.cpp
cd Workspace\DSA
clang++ -o demo likedlist.cpp
.\demo
clang++ -o demo likedlist.cpp
.\demo
clang++ -o demo likedlist.cpp
.\demo
nvim likedlist.cpp
clang++ -o demo likedlist.cpp
.\demo
clang++ -o demo likedlist.cpp
.\demo
clang++ -o demo likedlist.cpp
.\demo
clang++ -o demo likedlist.cpp
.\demo
clang++ -o demo likedlist.cpp
.\demo
cd AppData\Local\nvim
env.$USER
$env.USERNAME
$env.USERDOMAIN_ROAMINGPROFILE
$env.USERDOMAIN
pwd
cd AppData\Local\nvim-data\
cd undotree\
rm (fzf)
rm (fzf)
$env.USERPROFILE
cd AppData\Local\nvim
git status
git diff
git add .
git commit -m "addes peek.nvim for markdown and enabled persistent undo"
git push
git clone https://github.com/Microsoft/vcpkg.git
git clone https://github.com/Microsoft/vcpkg.git --depth=1
.\vcpkg\bootstrap-vcpkg.bat
vcpkg
rm -rf vcpkg
vcpkg
git clone https://github.com/Microsoft/vcpkg.git --depth=1
cd vcpkg\
.\bootstrap-vcpkg.bat
.\vcpkg.exe
mv vcpkg.exe ~\misc\
vcpkg.exe
mkdir C:\\vcpkg
mv misc\vcpkg.exe C:\vcpkg\
rm -rf vcpkg\
cd C:\vcpkg\
vcpkg.exe 
vcpkg.exe new TestVcpkg
cd Workspace\C++\
cd TestVcpkg\
vcpkg.exe new TestVcpkg
vcpkg.exe new --application
cleaR
CLEAR
cd C:\vcpkg\
rm -rf *
git clone https://github.com/Microsoft/vcpkg.git --depth=1
.\vcpkg\bootstrap-vcpkg.bat
cd vcpkg\
cd C:
cd C
cd C:\
rm -rf *
rm -rf vcpkg\
cd C:\
git clone https://github.com/Microsoft/vcpkg.git --depth=1
cd vcpkg\
.\bootstrap-vcpkg.bat
cd Workspace\C++\TestVcpkg\
vcpkg.exe new --application
vcpkg.exe add port fmt
cmake --preset=default
vcpkg install
which curl
which curl.exe 
scoop uninstall curl
which curl
vcpkg install
git config --global http.postBuffer 2048MB
vcpkg install
git config --global http.postBuffer 2048Mb
vcpkg install
git config --global http.postBuffer 8G
vcpkg install
cd out
cd build\
cd ..
vcpkg install
git config --global --unset http.postBuffer
git config --global http.postBuffer
vcpkg install
vcpkg install
cd Workspace\C++\TestVcpkg\
vcpkg install
explorer.exe .
git config --global user.name
git config --global user.email
winget upgrade
winget upgrade nu
winget upgrade
nu --version
winget upgrade
winget upgrade GitHub.cli
winget upgrade
winget upgrade Python.Python.3.12
py --version
winget upgrade
winget upgrade Opera
nvim demo.cpp
cd C:\
stat
stat .
file
scoop update
scoop status
sccop update ripgrep
scoop update ripgrep
scoop update gawk
scoop update fzf
scoop update deno
scoop update dgdb
scoop update gdb
scoop update ffmpeg
scoop status
scoop update pueue
cd Workspace\C++\misc\
clang++ -o demo templ.cpp
.\demo
clang++ -o demo templ.cpp
.\demo
clang++ -o demo templ.cpp
.\demo
clang++ -o demo templ.cpp
clang++ -o demo templ.cpp --std=c++20
.\demo
clang++ -o demo templ.cpp --std=c++20
.\demo
clang++ -o demo templ.cpp --std=c++20
.\demo
clang++ -o demo templ.cpp --std=c++20
.\demo
clang++ -o demo templ.cpp --std=c++20
.\demo
clang++ -o demo templ.cpp --std=c++20
.\demo
clang++ -o demo templ.cpp --std=c++20
.\demo
clang++ -o demo templ.cpp --std=c++20
.\demo
clang++ -o demo templ.cpp --std=c++20
.\demo
clang++ -o demo templ.cpp --std=c++20
.\demo
clang++ -o demo templ.cpp --std=c++20
.\demo
clang++ -o demo templ.cpp --std=c++20
.\demo
clang++ -o demo templ.cpp --std=c++20
.\demo
clang++ -o demo templ.cpp --std=c++20
.\demo
clang++ -o demo templ.cpp --std=c++20
.\demo
clang++ -o demo templ.cpp --std=c++20
.\demo
clang++ -o demo templ.cpp --std=c++20
.\demo
clang++ -o demo templ.cpp --std=c++20
.\demo
clang++ -o demo templ.cpp --std=c++20
.\demo
nvim templ.cpp
cd Workspace\C++\misc\
nvim templ.cpp
cd AppData\Local\nvim-data\
cd undotree\
winget install --id=rickbutton.workspacer  -e
scoop install workspaces
scoop install workspace
scoop install workspacer
Workspacer
workspacer
dwm
which dwm
ps
ps | where name ==  dwm
btop
nivm
cd Workspace\C++\TestVcpkg\
vcpkg install
cd out
cmake --preset=default
cmake --preset=default
cd Workspace\C++\TestVcpkg\
cmake --preset=default
cd out\
vcpkg install
cd vcpkg_installed\
cd vcpkg\
cd ..
vcpkg list
cmake --preset=default
cmake --preset=default
cd Workspace\C++\TestVcpkg\
cmake --preset=default
cmake -G Ninja ..
cmake -G Ninja .
cmake -G Ninja .
cmake -G Ninja .
cd Workspace\C++
use user/ template
template create c++ vcpkgtest
cd vcpkgtest\
touch vcpkg.json
cd build\
cmake -G Ninja .
cmake -G Ninja ..
cmake -G Ninja ..
vcpkg install
cmake -G Ninja ..
cmake -G Ninja ..
cmake -G Ninja ..
vcpkg install nlohmann-json
vcpkg add port nlohmann-json
vcpkg install
cd Workspace\C++\vcpkgtest\
mkdir build
cd build\
cmake -G Ninja ..
.\test.exe
cd ..
rm -rf out\
cd ..
rm -rf vcpkgtest TestVcpkg
rm -rf vcpkgtest TestVcpkg
rm -rf TestVcpkg
rm -rf vcpkgtest
rm -rf vcpkgtest
use user/ template
template create c++ vcpkgtest -g
cd vcpkgtest\
vcpkg add port fmt
touch vcpkg.json
vcpkg add port fmt
cd Workspace\C++\vcpkgtest\
cd build\
cmake -G Ninja ..
cd Workspace\C++\vcpkgtest\
clang-format-llvm
clang-format-llvm | save .clang-format
cd Workspace\C++\vcpkgtest\
cd build\
cd .config\
cd nu\
nvim templates.json
nvim demo.cpp
rm -f demo demo.cpp
cd AppData\Local\nvim
git status
git diff
git diff
nvim 
status
git push
git config --global user.email
cd AppData\Local\nvim
git log
cdlear
cd Workspace\C++\
mkdir snake_game
cd snake_game\
cd  ..
rm -rf snake_game\
cd snake_game\
use user/ template
template create c++ snake_game -g
cd snake_game\
vnim
vcpkg add port sdl2
cd build\
cmake -G Ninja ..
cmake -G Ninja ..
cmake -G Ninja ..
vcpkg add port fmt
cmake -G Ninja ..
cmake -G Ninja ..
.\snake_game.exe
.\snake_game.exe
.\snake_game.exe
.\snake_game.exe
.\snake_game.exe
.\snake_game.exe
.\snake_game.exe
.\snake_game.exe
clang-format-llvm | save .clang-format
cd Workspace\Rust\
cargo new files_path
cd files_path\
cd AppData\Local\nvim
cd Workspace\Rust\files_path\
cargo run
cargo run
cd Workspace\Rust\
cargo new lifetimes
cd lifetimes\
cargo doc
cd AppData\Local\nvim
cd Workspace\Rust\lifetimes\
cd ..
cd AppData\Local\nvim-data\
cd lazy\
cd nvim-treesitter\
cd parser\
rm norg.so
rm norg
rm norg_meta.so
cd AppData\Local\nvim
nvim .wezterm.lua
nvim .wezterm.lua
clewa
cd Workspace\Rust\
cd postgres_demo\
psql -U Cheth
psql
createdb program1
psql program1
cd Workspace\C++\
use user/ template
template create c++ basics
cd basics\
clang++ -o main src\main.cpp -std=c++20
.\main
clang++ -o main src\main.cpp -std=c++20
.\main
clang++ -o main src\main.cpp -std=c++20
.\main chethan
clang++ -o main src\main.cpp -std=c++20
.\main
clang++ -E main.cpp | save premain.cpp
clang++ -E src/main.cpp | save premain.cpp
clang++ -E src/main.cpp | save premain1.cpp
rm premain.cpp
clang++ -E src/main.cpp | save premain.cpp
clang++ -o main src\main.cpp -std=c++20
clang++ -o myheder src\myheader.cpp
clang++ -c myheader.o src\myheader.cpp
clang++ -c src\myheader.cpp
clang++ -o main src\main.cpp -std=c++20
clang++ -o main src\main.cpp myheader.o
rm premain.cpp
clang++ -E src/main.cpp | save premain.cpp
main
.
.\main
objdump main
objdump -d main
objdump -d main | save obj.txt
rm premain.cpp
clang++ -E src/main.cpp | save premain.cpp
clang++ -o main src\main.cpp
clang++ -o main src\main.cpp
git -v
winget install JanDeDobbeleer.OhMyPosh -s winget
oh-my-posh
oh-my-posh.exe
oh-my-posh
oh-my-posh font install
powershell.exe 
exit
powershell.exe 
nvim $nu.env-path
nvim $nu.config-path
nvim .wezterm.lua
cd AppData\Local\nvim
git status
oh-my-posh print 
oh-my-posh print  -c
echo $env.USERNAME
echo $env.USERDOMAIN
echo $env.USERDOMAIN_ROAMINGPROFILE
echo $env.USERPROFILE
cd Workspace\Rust\postgres_demo\
git status
which history
cd $nu.default-config-dir
nvim history.txt
clear
history | to text | fzf
history | fzf
clear
history | rg -e "^nvim"
history | rg -e "nvim"
clear
nvim
code .
nvim
clear
clera
clear
ls
mommy
clear
cd $nu.default-config-dir
ls
git status
git diff
clear
git add .
git commit -m "removed some stuff"
git push origin main
clear
git status
